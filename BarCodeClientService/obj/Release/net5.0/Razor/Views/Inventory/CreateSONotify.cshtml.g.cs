#pragma checksum "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2221262dddf0cba3b266e16b74f13374a7823764"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Inventory_CreateSONotify), @"mvc.1.0.view", @"/Views/Inventory/CreateSONotify.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2221262dddf0cba3b266e16b74f13374a7823764", @"/Views/Inventory/CreateSONotify.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"231de61c7d9a254eb8b39190aacae46b82b7984c", @"/Views/_ViewImports.cshtml")]
    public class Views_Inventory_CreateSONotify : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/styles.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/rowReorder.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery-3.3.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.rowReorder.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/datetime-moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/tengkimleang/goodReceiptPO/GetMasterGoodReceiptPO.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/tengkimleang/Method/MethodDataTable.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Array.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/tengkimleang/goodReceiptPO/CreatePO.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
  
    ViewData["Title"] = "Create SO for Notify";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2221262dddf0cba3b266e16b74f13374a78237648200", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2221262dddf0cba3b266e16b74f13374a78237649314", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2221262dddf0cba3b266e16b74f13374a782376410428", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376411547", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376412587", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376413627", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376414667", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376415707", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script src=""https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js""></script>
<script src=""https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js""></script>
<script src=""https://editor.datatables.net/extensions/Editor/js/dataTables.editor.min.js""></script>

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main {
        position: absolute;
    }

    .color_tap {
        min-width: 60px;
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .nav-tabs .nav-link {
        border-radius: 0px 12px 0px 0px;
        border: 1px solid rgb(193, 193, 193);
        height: 40px;
        line-height: 20px;
    }

    .modal {
        z-index: 200000;
    }

    .modal-header {
        background: #5f95c3;
        height: 40px;
        color: #ffffff;
    }

        .modal-header b {
            margin-top: -10px;
        }

    #TbAR table tr t");
            WriteLiteral(@"d {
        position: relative !important;
        padding: 0px !important;
        height: 35px;
        margin-left: 15px;
        margin-top: 10px;
        background-color: none;
    }

    table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background: #94d8e1;
        color: red;
    }

        table tbody tr.selected td .clsinput {
            background: #94d8e1;
            color: red;
        }

    .clsinput:focus {
        outline: none;
    }

    .ctd {
        text-align: center;
    }

    .sNum {
        text-align: center;
        background-color: #FFF168;
        width: 60px;
    }

    #TbInfImDataSelect, #TbInfImData, TbInfImDataLine {
        /*table-layout: fixed;*/
        width: 99% !important;
    }

    /* =================================================== */
    .cover-spin {
        position: fixed;
        width: 100%;
        left: 0;
        right: 0;
    ");
            WriteLiteral("    top: 0;\r\n        bottom: 0;\r\n        background-color: rgba(255,255,255,0.7);\r\n        z-index: 9999;\r\n        display: none;\r\n    }\r\n\r\n    ");
            WriteLiteral("@-webkit-keyframes spin {\r\n        from {\r\n            -webkit-transform: rotate(0deg);\r\n        }\r\n\r\n        to {\r\n            -webkit-transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    ");
            WriteLiteral(@"@keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    .cover-spin::after {
        content: '';
        display: block;
        position: absolute;
        left: 48%;
        top: 40%;
        width: 40px;
        height: 40px;
        border-style: solid;
        border-color: black;
        border-top-color: transparent;
        border-width: 4px;
        border-radius: 50%;
        -webkit-animation: spin .8s linear infinite;
        animation: spin .8s linear infinite;
    }
    /* =================================================== */
</style>

<script type=""text/javascript"">
    /*DocDate*/
    $(document).ready(function () {
        var now = new Date();
        var day = (""0"" + now.getDate()).slice(-2);
        var month = (""0"" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + ""-"" + (month) + ""-"" + (day);
        $('#txt_H_PostingDate').val(to");
            WriteLiteral(@"day);
        $('#txt_H_DeliveryDate').val(today);
        $('#txt_H_DocumentDate').val(today);
    });
</script>



<div id=""#main"">
    <div id=""frmLoading"" class=""cover-spin"" style=""display:none""></div>
    <h3>Create SO for Notify (INF-IM)</h3>

    <div style=""padding: 10px; color: #696969;"">
        <ul class=""nav nav-tabs Tap-PA"" id=""mytab"" role=""tablist"">
            <li class=""nav-item"">
                <a class=""nav-link color_tap"" id=""item-tab"" data-toggle=""tab"" href=""#item"" role=""tab"" aria-controls=""Items"" aria-selected=""false"">Add Data</a>
            </li>
            <li class=""nav-item"">
                <a class=""nav-link color_tap"" id=""head-tab"" data-toggle=""tab"" href=""#head"" role=""tab"" aria-controls=""Head"" aria-selected=""false"">Add Head</a>
            </li>
        </ul>
        <div class=""tab-content"" id=""myTabContent"">

");
            WriteLiteral(@"            <div class=""tab-pane fade show active"" id=""item"" role=""tabpanel"" aria-labelledby=""item-tab"" style=""margin-top: 10px"">
                <div class=""row"">
                    <div class=""col-sm-6"">

                        <div>
                            <label style=""font-size:18px;font-weight:500"">Customer Code :</label>
                            <div class=""input-group"">
                                <div class=""input-group-prepend"">
                                    <button class=""input-group-text"" id=""CcusID"">
                                        <i class=""fa fa-check""></i>
                                    </button>
                                </div>
                                <input type=""text"" class=""form-control"" placeholder=""Search Customer Code"" id=""CusID""");
            BeginWriteAttribute("value", " value=\"", 5728, "\"", 5736, 0);
            EndWriteAttribute();
            WriteLiteral(@" readonly>
                                <div class=""input-group-append"">
                                    <button class=""input-group-text btnModelsCus"" data-toggle=""modal"" data-target=""#ModalCusCode"">
                                        <i class=""fa fa-search""></i>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div>
                            <label style=""font-size:18px;font-weight:500"">Customer Name :</label>
                            <div class=""input-group"">
                                <input type=""text"" class=""form-control"" id=""CusName""");
            BeginWriteAttribute("value", " value=\"", 6443, "\"", 6451, 0);
            EndWriteAttribute();
            WriteLiteral(@" readonly>
                            </div>
                        </div>

                        Search INF-IM No. :
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <button class=""input-group-text"" id=""Cifr""><i class=""fa fa-check""></i></button>
                            </div>
                            <input type=""text"" id=""txtDocEntry"" disabled size=""5"" autocomplete=""off""");
            BeginWriteAttribute("value", " value=\"", 6942, "\"", 6950, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                            <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 7023, "\"", 7037, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txtDocNum\"");
            BeginWriteAttribute("value", " value=\"", 7053, "\"", 7061, 0);
            EndWriteAttribute();
            WriteLiteral(@" disabled>
                            <div class=""input-group-append"">
                                <button class=""input-group-text btnModelsItem"" data-toggle=""modal"" data-target=""#ModalInfIM"" onclick=""getIMByCus()""><i class=""fa fa-search""></i></button>
                            </div>
                        </div>
                    </div>
                </div>

                <hr>
");
            WriteLiteral(@"                <font>From Table</font>
                <div class=""row"" id=""dataDocnum"" style=""display:block"">
                    <div class=""col-sm-12"">
                        <div class=""table-responsive"">
                            <table id=""TbInfImData"" class=""table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                <thead>
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>DocEntry</th>
                                        <th>RowNo</th>
                                        <th>ItemCode</th>
                                        <th>ItemName</th>
                                        <th>InputQty</th>
                                        <th>Quantity</th>
                                        <th>UOM</th>
                                        <th>War");
            WriteLiteral(@"ehoues</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                        <th>IsBatchSerial</th>
                                        <th>B\S Number</th>
                                        <th>TotalQuantity</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <center>
");
            WriteLiteral("                        <button class=\"btn btn-warning\" id=\"btnSelectData\" style=\"font-size: 20px;\">\r\n                            <i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n");
            WriteLiteral(@"                    </center>
                    <hr>
                    <font>To Table</font>
                    <div class=""col-sm-12"">
                        <div class=""table-responsive"">
                            <table id=""TbInfImDataSelect"" class=""table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                <thead>
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>DocEntry</th>
                                        <th>IM-No.</th>
                                        <th>RowNo</th>
                                        <th>ItemCode</th>
                                        <th>ItemName</th>
                                        <th>Quantity</th>
                                        <th>UOM</th>
                                        <th>Warehouse</th");
            WriteLiteral(@">
                                        <th>Price</th>
                                        <th>Total</th>
                                        <th>IsBatchSerial</th>
                                        <th>B\S Number</th>
                                        <th>TotalQuantity</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

");
            WriteLiteral(@"                </div>
                <div class=""row"">
                    <div class=""col-sm-12"">
                        <div style=""text-align:right"">
                            <br>
                            <button class=""btn btn-success modal-toggle"" id=""btnNext"" style=""margin-left: 5px;"" data-href=""#head"">Next</button>
                        </div>
                    </div>
                </div>
            </div>

");
            WriteLiteral(@"            <div class=""tab-pane fade"" id=""head"" role=""tabpanel"" aria-labelledby=""head-tab"" style=""margin-top: 10px;"">
                <div class=""row"">



                    <div class=""col-sm-6"">
                        Series :
                        <div class=""input-group"">
                            <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 12285, "\"", 12299, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txt_H_SeriesCode\"");
            BeginWriteAttribute("value", " value=\"", 12322, "\"", 12330, 0);
            EndWriteAttribute();
            WriteLiteral(" autocomplete=\"off\" disabled size=\"8\">\r\n                            <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 12438, "\"", 12452, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txt_H_SeriesName\"");
            BeginWriteAttribute("value", " value=\"", 12475, "\"", 12483, 0);
            EndWriteAttribute();
            WriteLiteral(" autocomplete=\"off\" disabled>\r\n                        </div>\r\n\r\n                        Customer Name :\r\n                        <div class=\"input-group\">\r\n                            <input type=\"text\" id=\"txt_H_CusID\" disabled size=\"8\"");
            BeginWriteAttribute("value", " value=\"", 12722, "\"", 12730, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                            <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 12803, "\"", 12817, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txt_H_CusName\"");
            BeginWriteAttribute("value", " value=\"", 12837, "\"", 12845, 0);
            EndWriteAttribute();
            WriteLiteral(@" disabled>
                        </div>

                        Sale Employee :
                        <div class=""input-group"">
                            <div class=""input-group-prepend"">
                                <button class=""input-group-text"" id=""Cifr""><i class=""fa fa-check""></i></button>
                            </div>
                            <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 13242, "\"", 13256, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txt_H_SlpCode\"");
            BeginWriteAttribute("value", " value=\"", 13276, "\"", 13284, 0);
            EndWriteAttribute();
            WriteLiteral(" autocomplete=\"off\" disabled size=\"7\">\r\n                            <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 13392, "\"", 13406, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txt_H_SlpName\"");
            BeginWriteAttribute("value", " value=\"", 13426, "\"", 13434, 0);
            EndWriteAttribute();
            WriteLiteral(@" autocomplete=""off"" disabled>
                            <div class=""input-group-append"">
                                <button class=""input-group-text btnModelsItem"" data-toggle=""modal"" data-target=""#ModalSaleEmployee""><i class=""fa fa-search""></i></button>
                            </div>
                        </div>

                        Remarks :
                        <textarea class=""form-control"" id=""comments"" rows=""3"" style=""width:100%""></textarea>
                    </div>

                    <div class=""col-sm-6"">
                        Posting Date :
                        <div class=""input-group"">
                            <input type=""date"" class=""form-control"" id=""txt_H_PostingDate"">
                        </div>

                        Delivery Date :
                        <div class=""input-group"">
                            <input type=""date"" class=""form-control"" id=""txt_H_DeliveryDate"">
                        </div>

                        Document ");
            WriteLiteral(@"Date :
                        <div class=""input-group"">
                            <input type=""date"" class=""form-control"" id=""txt_H_DocumentDate"">
                        </div>

                    </div>


                    <div class=""col-sm-12"">
                        <hr>
                        <div class=""table-responsive"">
                            <table id=""TbInfImDataLine"" class=""table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall"" width=""99%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                <thead>
                                    <tr>
                                        <th>RowNo</th>
                                        <th>IM-No.</th>
                                        <th>ItemCode</th>
                                        <th>ItemName</th>
                                        <th>Quantity</th>
                                        <th>UOM</th>
                           ");
            WriteLiteral(@"             <th>Warehouse</th>
                                        <th>Price</th>
                                        <th>IsBatchSerial</th>
                                        <th>B\S Number</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>

                        <div style=""text-align:right"">
                            <br>
                            <button class=""btn btn-success"" id=""Save"" style=""margin-left:5px;"" onclick=""POSTDataAPI()"">Send To SAP</button>
                        </div>

                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalInfIM"" data-backdrop=""static"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background:#f0eff1;color:#696969;"">
            <div class=""modal-header"">
                <b>List of Inventory Transfer IM</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbInf"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                <thead>
                                    <tr>
                                        <th>DocNum</th>
                                        <th>Posting Date</th>
                                        <th>CardCode</th>
                                        <th>CardName</th>
                                        <th>slp");
            WriteLiteral(@"Code</th>
                                        <th>slpName</th>
                                        <th>fromWhs</th>
                                        <th>toWhs</th>
                                        <th>DocEntry</th>
                                        <th>SeriesName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseInf"" style=""background:#f0eff1;color:#696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""CloseInf"" style=""background:#f0eff1;color:#696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalCusCode"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background: #f0eff1; color: #696969;"">
            <div class=""modal-header"">
                <b>List of Customer</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbCusCode"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background: #f0eff1; color: #696969;"">
                                <thead>
                                    <tr>
                                        <th>Customer Code</th>
                                        <th>Cusetomer Name</th>
                                        <th>Phone</th>
                                        <th>Address</th>
                                    </tr>
                       ");
            WriteLiteral(@"         </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseCus"" style=""background: #f0eff1; color: #696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" style=""background: #f0eff1; color: #696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalSaleEmployee"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background:#f0eff1;color:#696969;"">
            <div class=""modal-header"">
                <b>List of Employee</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbSaleEmployee"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>Name</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
            ");
            WriteLiteral(@"    </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseSlp"" style=""background:#f0eff1;color:#696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" style=""background:#f0eff1;color:#696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376439914", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376440954", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376441995", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2221262dddf0cba3b266e16b74f13374a782376443036", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script type=""text/javascript"">
    /*document.getElementById(""frmLoading"").style.display = ""block"";*/
    var LData = [];
    var lsRowNumber = [];
    var Ltmp = [];
    var LDataTb1 = [];
    var tbline1 = [];
    var itemcode_pk;
    var allDataLine = [];
    var sLineIm = [];
    //Start Table [TbDataLine]
    $('#TbInf').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LData,
        language: {
            emptyTable: ""<b>Table INF-IM is Empty</b>""
        },
        columns: [
            { data: ""docNum"", autoWidth: true },
            { data: ""docDate"", autoWidth: true },
            { data: ""cardCode"", autoWidth: true },
            { data: ""cardName"", autoWidth: true },
            { data: ""slpCode"", autoWidth: true },
            { data: ""slpName"", autoWidth: true },
            { data: ""fromWhs"", autoWidth: true },
            { data: ""toWhs"", autoWidth: true },
            { data: ""docEntry"", autoWidth: true },
            { data: ""se");
            WriteLiteral(@"riesName"", autoWidth: true }
        ],
        autoWidth: true,
        pageLength: 10,
        select: true,
        paging: true,
        ordering: false,
        info: false,
        searching: true
    });

    var tbInf = $('#TbInf').DataTable();

    //+++++ SaleEmployee +++++ START
    var tbSaleEmployee = $('#TbSaleEmployee').DataTable({
            ""ajax"": {
            ""url"": '");
#nullable restore
#line 549 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
               Write(Url.Action("GetSaleEmployee", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            ""type"": ""GET"",
            ""dataType"": ""JSON"",
            ""dataSrc"": 'data',
            ""complete"": function (data) {
                console.log(""Get Sale-Employee Complete."");
                jqueryXml = $(data);
                $('#txt_H_SlpCode').val(jqueryXml[0].responseJSON.data[0].series);
                $('#txt_H_SlpName').val(jqueryXml[0].responseJSON.data[0].seriesName);
                //document.getElementById(""frmLoading"").style.display = ""none"";
            }
        },
        ""columns"": [
            { ""data"": ""slpCode"" },
            { ""data"": ""slpName"" }
        ],
        ""select"": true,
        ""paging"": true,
        ""ordering"": false,
        ""info"": false,
        ""searching"": true
    });

    $('#ChooseSlp').click(function () {
        const index = tbSaleEmployee.row('.selected').index();
        const data = tbSaleEmployee.row(index).data();
        $('#txt_H_SlpCode').val(data.slpCode);
        $('#txt_H_SlpName').val(data.slpName);
   ");
            WriteLiteral(" });\r\n    //+++++ SaleEmployee +++++ END\r\n\r\n    //+++++ Series Code +++++ START\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: \"");
#nullable restore
#line 583 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
         Write(Url.Action("GetSeriesSO", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
        contentType: ""application/json; charset=utf-8"",
        dataType: ""json"",
        dataSrc: 'data',
        success: function (sdata) {
            jqueryXml = $(sdata);
            //console.log(jqueryXml);
            console.log(""GET Series Complete."");
            $('#txt_H_SeriesCode').val(jqueryXml[0].data[0].series);
            $('#txt_H_SeriesName').val(jqueryXml[0].data[0].seriesName);
            //style = ""color:green"",btnCheckSeries,style=""background-color:red
            //document.getElementById(""Cifr"").style.backgroundColor = ""green"";
            //document.getElementById(""btnCheckSeries"").style.color = ""#FFFFFF"";
            //document.getElementById(""frmLoading"").style.display = ""none"";
        },
        error: function (err) {
            //document.getElementById(""frmLoading"").style.display = ""none"";
        }
    });
    //+++++ Series Code +++++ END

    /* DataTable List Of Customer */
    var LCus = [];
    DataTableInit.TableCustomer();
    var tbCus");
            WriteLiteral(" = $(\'#TbCusCode\').DataTable();\r\n    DataMethod.AddClassSelected(\'TbCusCode\', tbCus);\r\n    $(\".btnModelsCus\").click(function() {\r\n        $(\"#ModalCusCode\").modal({ backdrop: \"static\" });\r\n        GetMasterData.getCustomer(\'");
#nullable restore
#line 611 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
                              Write(Url.Action("GetCustomerClientResult", "GoodsReceiptPO"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"','C');
    });

    $('#ChooseCus').click(function() {
        const index = tbCus.row('.selected').index();
        const data = tbCus.row(index).data();
        $('#CusID').val(data.cardCode);
        $('#CusName').val(data.cardName);

        $('#txt_H_CusID').val(data.cardCode);
        $('#txt_H_CusName').val(data.cardName);
    });
    /* End DataTable List Of Customer */

    //Search Inventory Tranfer IM
    function getIMByCus() {
        var sLine = [];
        var dataLineIm = [];
        $.ajax({
            url: '");
#nullable restore
#line 630 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
             Write(Url.Action("GetIMByCus", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { cusCode: $('#CusID').val() },
            type: ""GET"",
            dataType: ""JSON"",
            ""dataSrc"": 'data',
            success: function (data) {
                //console.log(data);
                //console.log(data.length);

                for (let dRow = 0; dRow < data.length; dRow++) {
                    arrayLine = {};
                    //var data = tbInf.row(dRow).data();
                    //console.log(data);
                    arrayLine.docNum = data[dRow].docNum;
                    arrayLine.docDate = data[dRow].docDate;
                    arrayLine.cardCode = data[dRow].cardCode;
                    arrayLine.cardName = data[dRow].cardName;
                    arrayLine.slpCode = data[dRow].slpCode;
                    arrayLine.slpName = data[dRow].slpName;
                    arrayLine.fromWhs = data[dRow].fromWhs;
                    arrayLine.toWhs = data[dRow].toWhs;
                    arrayLine.docEntry = data[dRow].docEntry;
   ");
            WriteLiteral(@"                 arrayLine.seriesName = data[dRow].seriesName;
                    arrayLine.line = data[dRow].line;
                    sLine.push(arrayLine);
                }
                //console.log('Show Data');
                //console.log(dataLineIm);
                //LData = [];
                //LData = data.data;
                tbInf.clear();
                tbInf.rows.add(sLine);
                tbInf.draw();

            }
        });
    }

    var tbInfImData = $('#TbInfImData').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LData,
        columnDefs: [{
            ""defaultContent"": ""-"",
            ""targets"": ""_all""
        }],
        language: {
            emptyTable: ""<b>From Table is Empty</b>""
        },
        columns: [
            {
                render: function (data, type, full, meta) { return '<input type=""checkbox"" class=""clsinput"" style=""margin:auto; width:100%;"" onchange=""AddRow(' + meta.row + ')"" id=""chkLin");
            WriteLiteral(@"eNumSelect' + meta.row + '"">'; },
                autoWidth: true
            },
            { data: ""docEntry"", autoWidth: true },
            { data: ""lineNum"", autoWidth: true },
            { data: ""itemCode"", autoWidth: true },
            { data: ""dscription"", autoWidth: true },
            {
                data: ""batchSerialQty"",
                render: function (data, type, full, meta) {
                    return '<input type=""number"" value=""' + data + '"" id=""inputQty' + meta.row + '"" class=""sNum"">';
                },
                autoWidth: true
            },
            { data: ""batchSerialQty"", autoWidth: true },
            { data: ""uomCode"", autoWidth: true },
            { data: ""whsCode"", autoWidth: true },
            { data: ""price"", autoWidth: true },
            { data: ""lineTotal"", autoWidth: true },
            { data: ""isBtchSerNum"", autoWidth: true },
            { data: ""batchSerialNumber"", autoWidth: true },
            { data: ""quantity"", autoWidth: true }");
            WriteLiteral(@"
        ],
        autoWidth: true,
        pageLength: 10,
        select: true,
        paging: true,
        ordering: false,
        info: false,
        searching: false
    });

    tbInfImData.columns([1, 2 , 6, 10, 13]).visible(false, false);
    //onClick=""removeRowTo(' + meta.row + ')""

    var LtmpDataSelected = [];
    var tbInfImData2 = $('#TbInfImDataSelect').DataTable({
        responsive: true,
        bLengthChange: false,
        binfo: false,
        language: {
            emptyTable: ""<b>To Table is Empty</b>""
        },
        data: LtmpDataSelected,
        columnDefs: [{
            ""defaultContent"": ""-"",
            ""targets"": ""_all""
        }],
        columns: [
            {
                render: function (data, type, full, meta) { return '<button class=""btn-sm btn-danger"" onClick=""removeRowTo(' + meta.row + ')""><i class=""fas fa-trash-alt""></i></button>'; }
            },
            { data: ""docEntry"", autoWidth: true },
            { data: ""doc");
            WriteLiteral(@"Num"", autoWidth: true },
            { data: ""lineNum"", autoWidth: true },
            { data: ""itemCode"", autoWidth: true },
            { data: ""dscription"", autoWidth: true },
            { data: ""batchSerialQty"", autoWidth: true },
            { data: ""uomCode"", autoWidth: true },
            { data: ""whsCode"", autoWidth: true },
            { data: ""price"", autoWidth: true },
            { data: ""lineTotal"", autoWidth: true },
            { data: ""isBtchSerNum"", autoWidth: true },
            { data: ""batchSerialNumber"", autoWidth: true },
            { data: ""quantity"", autoWidth: true }
        ],
        rowCallback: function (row, data, index) {
        },
        autoWidth: true,
        pageLength: 10,
        select: true,
        paging: true,
        ordering: false,
        info: false,
        searching: false
    });

    tbInfImData2.columns([1, 2, 3, 10, 13]).visible(false, false);

    $('#ChooseInf').click(function () {
        const index = tbInf.row('.selected");
            WriteLiteral(@"').index();
        const data = tbInf.row(index).data();
        $('#txtDocEntry').val(data.docEntry);
        $('#txtDocNum').val(data.docNum);
        console.log(data);
        sLineIm = []
        if (data.line.length > 0) {
            for (let dRow = 0; dRow < data.line.length; dRow++) {
                arrayLine = {};
                arrayLine.docEntry = data.line[dRow].docEntry;
                arrayLine.lineNum = data.line[dRow].lineNum;
                arrayLine.itemCode = data.line[dRow].itemCode;
                arrayLine.dscription = data.line[dRow].dscription;
                arrayLine.quantity = data.line[dRow].quantity;
                arrayLine.price = data.line[dRow].price;
                arrayLine.priceBefDi = data.line[dRow].priceBefDi;
                arrayLine.whsCode = data.line[dRow].whsCode;
                arrayLine.lineTotal = data.line[dRow].lineTotal;
                arrayLine.uomEntry = data.line[dRow].uomEntry;
                arrayLine.uomCode = data.line[d");
            WriteLiteral(@"Row].uomCode;
                arrayLine.fisrtBin = data.line[dRow].fisrtBin;
                arrayLine.isBtchSerNum = data.line[dRow].isBtchSerNum;
                arrayLine.batchSerialNumber = data.line[dRow].batchSerialNumber;
                arrayLine.batchSerialQty = data.line[dRow].batchSerialQty;
                sLineIm.push(arrayLine);
            }
            //console.log(sLineIm);
            tbInfImData.clear();
            tbInfImData.rows.add(sLineIm);
            tbInfImData.draw();
            Ltmp = [];
        }
        else {
            alert('No Data.');
        }

    });

    //Function load data
    function fncLoadData() {
        var docentry = $(""#txtDocEntry"").val();
        if (docentry != '') {
            //document.getElementById(""frmLoading"").style.display = ""block"";
            ApplyDataTable(docentry);
        } else {
            alert(""Please Select DocNum"");
        }
    }

    //Apple Data Table From DocEntry
    function ApplyDataTable(id");
            WriteLiteral(") {\r\n\r\n        $.noConflict();\r\n        $.ajax({\r\n            url: \'");
#nullable restore
#line 815 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
             Write(Url.Action("GetListItemInIM", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { docentry: id },
            type: ""GET"",
            dataType: ""JSON"",
            ""dataSrc"": 'data',
            success: function (data) {
                var rows_selected = [];
                var tline = $('#TbDataLine').DataTable({
                    ""bDestroy"": true,
                    ""aaData"": data.data,
                    ""autoWidth"": true,
                    ""responsive"": true,
                    ""lengthChange"": true,
                    ""ordering"": true,
                    ""columns"": [
                        { ""data"": ""itemCode"", ""autoWidth"": true },
                        { ""data"": ""itemName"", ""autoWidth"": true },
                        { ""data"": ""quantity"", ""autoWidth"": true },
                        { ""data"": ""fWhsCode"", ""autoWidth"": true },
                        { ""data"": ""tWhsCode"", ""autoWidth"": true },
                        { ""data"": ""uomCode"", ""autoWidth"": true },
                        { ""data"": ""binCode"", ""autoWidth"": true },
   ");
            WriteLiteral(@"                     { ""data"": ""fromBinEntry"", ""autoWidth"": true },
                        { ""data"": ""toBinCode"", ""autoWidth"": true },
                        { ""data"": ""toBinEntry"", ""autoWidth"": true }
                    ],
                    ""language"": { ""emptyTable"": ""No Events Found Related To This User"" },
                    ""order"": [[0, 'desc']],
                    ""select"": true,
                    ""paging"": false,
                    ""ordering"": false,
                    ""info"": false,
                    ""searching"": false
                });

                console.log(""Download Data Complete"");
                document.getElementById(""frmLoading"").style.display = ""none"";
                document.getElementById(""dataDocnum"").style.display = ""block"";
                document.getElementById(""txtScanBarCode01"").value = '';
                document.getElementById(""txtScanBarCode01"").focus();

                tline.on('select', function () {
                    var cellitemc");
            WriteLiteral(@"ode = tline.rows({ selected: true }).data()[0]['itemCode'];
                    var celldscription = tline.rows({ selected: true }).data()[0]['dscription'];
                    var cellquantity = tline.rows({ selected: true }).data()[0]['quantity'];
                    var cellfromBinEntry = tline.rows({ selected: true }).data()[0]['fromBinEntry'];

                    var txtItemCode = document.getElementById(""txtItemCode"");
                    var txtItemName = document.getElementById(""txtItemName"");
                    var txtQuantity = document.getElementById(""txtQuantity"");
                    var txtfBinEntry = document.getElementById(""txtfBinEntry"");

                    txtItemCode.value = cellitemcode;
                    txtItemName.value = celldscription;
                    txtQuantity.value = cellquantity;
                    txtfBinEntry.value = cellfromBinEntry;
                });

            }
        });

    }

    
    function AddRow(row) {
        if ($(""#chkLineN");
            WriteLiteral(@"umSelect"" + row).prop(""checked"") == true) {
            lsRowNumber.push(row);
        }
        else {
            var index = lsRowNumber.indexOf(row);
            lsRowNumber.splice(index, 1);
        }
    }

    //btnGetRow
    //var length2;
    //var chkDuplicate;
    //function CheckItemBS_Duplicate(itemcode, bsnumber) {
    //    length2 = tbInfImData2.column(0).data().length;
    //    console.log('length :> ' + length2);
    //    if (length2 != 0) {
    //        for (var x = 0; x < tbInfImData2.column(0).data().length; x++) {
    //            let xdata = tbInfImData2.row(x).data();
    //            console.log(xdata.itemCode + "":"" + itemcode + "","" + xdata.batchSerialNumber + "":"" + bsnumber);
    //            if (xdata.itemCode != itemcode && xdata.batchSerialNumber != bsnumber) {

    //                chkDuplicate = 'non-duplicate';

    //            } else if (xdata.itemCode == itemcode && xdata.batchSerialNumber == bsnumber) {

    //                chkDuplicate = ");
            WriteLiteral(@"'duplicate';

    //            }

    //        }
    //    }
    //    else if (length2 == 0) {

    //        chkDuplicate = 'non-duplicate';

    //    }

    //    return chkDuplicate;
    //}

    
    var tbInfImDataLineA = $('#TbInfImDataLine').DataTable({
        responsive: true,
        bLengthChange: false,
        binfo: false,
        data: allDataLine,
        columns: [
            { data: ""lineNum"", autoWidth: true },
            { data: ""docNum"", autoWidth: true },
            { data: ""itemCode"", autoWidth: true },
            { data: ""dscription"", autoWidth: true },
            { data: ""quantity"", autoWidth: true },
            { data: ""uomCode"", autoWidth: true },
            { data: ""whsCode"", autoWidth: true },
            { data: ""price"", autoWidth: true },
            { data: ""isBtchSerNum"", autoWidth: true },
            { data: ""batchSerialNumber"", autoWidth: true },
        ],
        rowCallback: function (row, data, index) {
        },
        au");
            WriteLiteral(@"toWidth: true,
        pageLength: 10,
        select: true,
        paging: true,
        ordering: false,
        info: false,
        searching: false
    });

    
    $(""#btnSelectData"").click(function () {
        //LDataTb1 = [];

        for (var i = 0; i < tbInfImData.column(0).data().length; i++) {
            Ltmp = [];
            const checked = document.querySelector('#chkLineNumSelect' + i + ':checked') !== null;
            let data = tbInfImData.row(i).data();

            if (checked == true) {
                //console.log('Check is ' + checked);
                //console.log(data);
                //Add Line Data
                var tmpAdd = {};
                tmpAdd.docEntry = data.docEntry;
                tmpAdd.docNum = $('#txtDocNum').val();
                tmpAdd.lineNum = '';
                tmpAdd.itemCode = data.itemCode;
                tmpAdd.dscription = data.dscription;
                tmpAdd.batchSerialQty = $('#inputQty' + i).val();
            ");
            WriteLiteral(@"    tmpAdd.uomCode = data.uomCode;
                tmpAdd.whsCode = data.whsCode;
                tmpAdd.price = data.price;
                tmpAdd.lineTotal = data.lineTotal;
                tmpAdd.isBtchSerNum = data.isBtchSerNum;
                tmpAdd.batchSerialNumber = data.batchSerialNumber;
                tmpAdd.quantity = data.quantity;
                Ltmp.push(tmpAdd);
                console.log('Push ->');
                console.log(Ltmp);
                tbInfImData2.rows.add(Ltmp);
                tbInfImData2.search('').draw();
                Ltmp = [];
                
                //========== End Add ==========
                document.getElementById(""chkLineNumSelect"" + i).checked = false;
            }
            
        }

    });

    //$('#TbInfImDataSelect').on(""click"", ""button"", function () {
    //    tbline1 = [];
    //    var td = $(this).closest(""tr"");
    //    if (td.hasClass(""child"")) { td.prev('.parent').remove(); }
    //    td.remove();
 ");
            WriteLiteral(@"   //});

    function removeRowTo(rowno) {

        //console.log($(this).parent());
        //tbInfImData2.row($(this).parents('tr')).remove().draw(false);

        //alert('rowNo : ' + row);
        var data = tbInfImData2.row(rowno).data();
        //console.log(data);
        var itemCode = data.itemCode;
        let msg = ""คุณต้องการลบ Item "" + itemCode + "" นี้ใช่ไหม"";
        if (confirm(msg) == true) {
            console.log('OK -> Remove Row' + rowno);
            tbInfImData2.rows(rowno).remove().draw(false);
        }
        else {
            console.log('Cancel -> Remove Row' + rowno);
        }
    }



    $('.modal-toggle').click(function (e) {
        var tab = $(this).data('href');
        $('li > a[href=""' + tab + '""]').tab(""show"");

        console.log(tab);
        allDataLine = [];
        if (tab == '#head') {
            // Copy Row To #head Tab
            for (let dtRow = 0; dtRow < tbInfImData2.column(0).data().length; dtRow++) {
                arr");
            WriteLiteral(@"ayDataLine = {};
                var ldata = tbInfImData2.row(dtRow).data();
                console.log(ldata);
                
                //arrayDataLine.cardCode = $('#CusID').val();
                //arrayDataLine.cardName = $('#CusName').val();
                
                arrayDataLine.lineNum = dtRow;
                arrayDataLine.docNum = ldata.docNum;
                arrayDataLine.itemCode = ldata.itemCode;
                arrayDataLine.dscription = ldata.dscription;
                arrayDataLine.quantity = ldata.batchSerialQty;
                arrayDataLine.uomCode = ldata.uomCode;
                arrayDataLine.whsCode = ldata.whsCode;
                arrayDataLine.price = ldata.price;
                arrayDataLine.isBtchSerNum = ldata.isBtchSerNum;
                arrayDataLine.batchSerialNumber = ldata.batchSerialNumber;
                arrayDataLine.U_TranferNo = ldata.docNum;
                allDataLine.push(arrayDataLine);
            }

            console.log(al");
            WriteLiteral(@"lDataLine);
            tbInfImDataLineA.clear().draw();
            tbInfImDataLineA.rows.add(allDataLine).draw(false);
        }

    });


    //Add Data Head And Line -> SAP
    function POSTDataAPI() {
        console.log('Sending SAP...');
        document.getElementById(""frmLoading"").style.display = ""block"";
        var sHead = {};
        var sLine = [];
        var dLine = [];
        var serialLine = [];
        var batchLine = [];
        var arrayLine = {};
        var arrDataLine = {};
        var arrDataLineB = {};
        var arrDataLineS = {};
        //Data Line
        for (let ctbline = 0; ctbline < tbInfImDataLineA.column(0).data().length; ctbline++) {
            var ldata = tbInfImDataLineA.row(ctbline).data();
            console.log(ldata);

            batchLine = [];
            serialLine = [];
            arrDataLineB = {};
            arrDataLineS = {};
            if (ldata.isBtchSerNum == ""B"") {
                arrDataLineB.itemCode = ldata.itemCod");
            WriteLiteral(@"e;
                arrDataLineB.quantity = ldata.quantity;
                arrDataLineB.batchNumber = ldata.batchSerialNumber;
                batchLine.push(arrDataLineB);
                serialLine = [];
            }

            else if (ldata.isBtchSerNum == ""S"") {
                arrDataLineS.itemCode = ldata.itemCode;
                arrDataLineS.quantity = ldata.quantity;
                arrDataLineS.serialNumber = ldata.batchSerialNumber;
                serialLine.push(arrDataLineS);
                batchLine = [];
            }
            else if (ldata.isBtchSerNum == ""N"") {
                batchLine = [];
                serialLine = [];
            }

            arrDataLine = {};
            arrDataLine.lineNum = ldata.lineNum;
            arrDataLine.manageItem = ldata.isBtchSerNum;
            arrDataLine.itemCode = ldata.itemCode;
            arrDataLine.quantity = ldata.quantity;
            arrDataLine.uomName = ldata.uomCode;
            arrDataLine.price = ldata");
            WriteLiteral(@".price;
            arrDataLine.whsCode = ldata.whsCode;
            arrDataLine.U_TranferNo = ldata.U_TranferNo;
            arrDataLine.batches = batchLine;
            arrDataLine.serial = serialLine;
            dLine.push(arrDataLine);
        }
        console.log(dLine);

        //Data Head
        sHead.seriesCode = $('#txt_H_SeriesCode').val();
        sHead.cardCode = $('#txt_H_CusID').val();
        sHead.docDate = $('#txt_H_PostingDate').val();
        sHead.docDueDate = $('#txt_H_DeliveryDate').val();
        sHead.taxDate = $('#txt_H_DocumentDate').val();
        sHead.slpCode = $('#txt_H_SlpCode').val();
        sHead.remark = $('#comments').val();
        sHead.lines = dLine;
        console.log(sHead);

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 1127 "D:\VB\BarCode-System\BarCodeClientService\Views\Inventory\CreateSONotify.cshtml"
             Write(Url.Action("PostSalesOrderIM", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { sendSalesOrderForIM: sHead},
            dataType: ""JSON"",
            error: function (request, error) {
                    console.log(arguments);
                    alert("" Can't do because: "" + error);
            },
            success: function (ex) {
                //console.log(ex);
                if (ex.errorCode == 0) {
                    alert(""Create SO -> Success"");
                    document.getElementById(""Save"").style.display = 'none';
                    document.getElementById(""frmLoading"").style.display = ""none"";

                    setTimeout(() => {
                        document.location.reload();
                    }, 1000);


                } else {
                    console.log(ex.errorMsg);
                    alert(ex.errorMsg);
                    document.getElementById(""Save"").style.display = 'block';
                    document.getElementById(""frmLoading"").style.display = ""none"";
                }
            }
    ");
            WriteLiteral("    });\r\n    }\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
