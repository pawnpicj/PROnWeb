#pragma checksum "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9d0ad7057197326d42642c7c3dd3a21a93f18e03"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_SaleOrder_CreateSaleOrder), @"mvc.1.0.view", @"/Views/SaleOrder/CreateSaleOrder.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9d0ad7057197326d42642c7c3dd3a21a93f18e03", @"/Views/SaleOrder/CreateSaleOrder.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"231de61c7d9a254eb8b39190aacae46b82b7984c", @"/Views/_ViewImports.cshtml")]
    public class Views_SaleOrder_CreateSaleOrder : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/styles.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/rowReorder.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery-3.3.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.rowReorder.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/datetime-moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.buttons.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/dataTables.dateTime.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "DashboardAR", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Dashboard", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onclick", new global::Microsoft.AspNetCore.Html.HtmlString("return confirm(\'Unsaved data will be lost. Do you want to continue without saving?\')"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "ShowAR", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "ARInvoice", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Array.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
  
    ViewData["Title"] = "Delivery";
    var dt = DateTime.Now;
    ViewData["Date"] = dt.ToShortDateString();

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9d0ad7057197326d42642c7c3dd3a21a93f18e0310421", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9d0ad7057197326d42642c7c3dd3a21a93f18e0311536", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9d0ad7057197326d42642c7c3dd3a21a93f18e0312651", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0313801", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0314841", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0315881", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0316921", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0317961", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0319001", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0320041", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0321082", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0322123", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main { position: absolute; }

    .color_tap {
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
        min-width: 60px;
    }

    .nav-tabs .nav-link {
        border: 1px solid rgb(193, 193, 193);
        border-radius: 0px 12px 0px 0px;
        height: 40px;
        line-height: 20px;
    }

    .modal { z-index: 200000; }

    .modal-header {
        background: #5f95c3;
        color: #ffffff;
        height: 40px;
    }

    .modal-header b { margin-top: -10px; }

    #TbAR table tr td {
        background-color: none;
        height: 35px;
        margin-left: 15px;
        margin-top: 10px;
        padding: 0px !important;
        position: relative !important;
    }

    table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background:");
            WriteLiteral(@" #94d8e1;
        color: red;
    }

    table tbody tr.selected td .clsinput {
        background: #94d8e1;
        color: red;
    }

    .clsinput:focus { outline: none; }

    table.dataTable th {
        background-color: skyblue;
        color: white;
        font-size: 12px;
        white-space: pre-wrap;
    }

    table.dataTable td {
        font-size: 12px;
        font-weight: bold;
        white-space: pre-wrap;
    }

    .BoxScan {
        /*display: none;*/
        border: 3px solid black;
        border-radius: 3px 3px;
    }
</style>

<script type=""text/javascript"">
    /*DocDate*/
    $(document).ready(function() {
        var now = new Date();
        var day = (""0"" + now.getDate()).slice(-2);
        var month = (""0"" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + ""-"" + (month) + ""-"" + (day);
        $('#DocDate').val(today);
        $('#DocumentDate').val(today);

    });

    function checkBarcodeUDOM() {
        doc");
            WriteLiteral(@"ument.getElementById(""divBarcodeUDOM"").style.display = ""block"";
        document.getElementById(""divBarcodeProduct"").style.display = ""none"";
        document.getElementById(""txtScanBarCode01"").focus();

        document.getElementById(""rdoTypeItem1"").checked = false;
        document.getElementById(""rdoTypeItem2"").checked = false;
        document.getElementById(""txtQuantity02"").disabled = true;
        document.getElementById(""txtScanBarCode02"").disabled = true;
        document.getElementById(""txtScanBatchSerial02"").disabled = true;

    }

    function checkBarcodeProduct() {
        document.getElementById(""divBarcodeUDOM"").style.display = ""none"";
        document.getElementById(""divBarcodeProduct"").style.display = ""block"";
        document.getElementById(""txtScanBarCode02"").focus();
    }

    function chTypeItem() {
        document.getElementById(""txtQuantity02"").disabled = false;
        document.getElementById(""txtScanBarCode02"").disabled = false;
        document.getElementById(");
            WriteLiteral(@"""txtScanBatchSerial02"").disabled = false;
        document.getElementById(""txtScanBarCode02"").focus();
        document.getElementById(""txtQuantity02"").value = ""1"";
        document.getElementById(""txtScanBarCode02"").value = """";
        document.getElementById(""txtScanBatchSerial02"").value = """";
    }

</script>

<div id=""#main"">

    <div class=""row"" style=""color: #696969; margin-left: 5px; margin-top: 5px;"">
        <h5 style=""color: #696969; margin-top: 5px;"">
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0326890", async() => {
                WriteLiteral("<i class=\"fas fa-home\"></i> Dashboard");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_13.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            <span>\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0328411", async() => {
                WriteLiteral("<i class=\"fa fa-caret-right align-right\"></i> Delivery ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_17.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_17);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                <i class=""fa fa-caret-right align-right""></i> Create Delivery
            </span>
        </h5>
    </div>
    <hr/>
    <div class=""row"" id=""DLN"">
        <div class=""col-sm-6"">
            SO DocNum :
            <div class=""input-group"">
                <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 5371, "\"", 5385, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txtSODocEntry\" readonly>\r\n                <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 5472, "\"", 5486, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtSODocNum"" readonly>
                <button class=""btn-primary input-group-text btnModelsItem"" data-toggle=""modal"" data-target=""#ModalSaleOrder"">
                    <i>Select SO</i>
                </button>
            </div>

            Customer code :
            <div class=""input-group"">
                <input type=""text"" class=""form-control"" placeholder=""Search Customer"" id=""CardCode"" readonly>
");
            WriteLiteral(@"            </div>
            Customer name :
            <div class=""input-group"">
                <input type=""text"" class=""form-control"" id=""CardName"" readonly>
            </div>
            Posting Date :
            <div class=""input-group"">
                <input type=""date"" class=""form-control"" id=""DocDate"">
            </div>

            <div>
                Series :
                <div class=""input-group"">
                    <div class=""input-group-prepend"">
                        <button class=""input-group-text"" id=""Cifr"">
                            <i class=""fa fa-check""></i>
                        </button>
                    </div>
                    <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 6800, "\"", 6814, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txtSeries\"");
            BeginWriteAttribute("value", " value=\"", 6830, "\"", 6838, 0);
            EndWriteAttribute();
            WriteLiteral(" autocomplete=\"off\" disabled size=\"7\">\r\n                    <input type=\"text\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 6938, "\"", 6952, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txtSeriesName\"");
            BeginWriteAttribute("value", " value=\"", 6972, "\"", 6980, 0);
            EndWriteAttribute();
            WriteLiteral(@" autocomplete=""off"" disabled>
                    <div class=""input-group-append"">
                        <button class=""input-group-text btnModelsItem"" data-toggle=""modal"" data-target=""#ModalSeries"">
                            <i class=""fa fa-search""></i>
                        </button>
                    </div>
                </div>
            </div>

            Sale Employee :
            <div class=""input-group"">
                <div class=""input-group-prepend"">
                    <button class=""input-group-text"" id=""COcrCode4"">
                        <i class=""fa fa-check""></i>
                    </button>
                </div>
                <input type=""text"" id=""txtSlpCode"" autocomplete=""off"" disabled size=""7""/>
                <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 7796, "\"", 7810, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"txtSlpName\"");
            BeginWriteAttribute("value", " value=\"", 7827, "\"", 7835, 0);
            EndWriteAttribute();
            WriteLiteral(@" disabled>
                <div class=""input-group-append"">
                    <button class=""input-group-text"" data-toggle=""modal"" data-target=""#ModalSaleEmployee"">
                        <i class=""fa fa-search""></i>
                    </button>
                </div>
            </div>

            <div>
                Ref :
                <div class=""input-group"">
                    <input type=""text"" class=""form-control"" id=""txtRef"">
                </div>
            </div>

            <div>
                Remark :
                <div class=""input-group"">
                    <input type=""text"" class=""form-control"" id=""txtRemark"">
                </div>
            </div>
            <br>
            <div>
                <button class=""btn btn-warning"" id=""btnSearch"" style=""width: 100%"" onclick=""fncGetSOLine();"">
                    <b>Search</b>
                </button>
                <button class=""btn btn-danger"" id=""btnClear"" style=""width: 100%"" onclick=""ClearTb()");
            WriteLiteral(@";"">
                    <b>Clear</b>
                </button>
            </div>
            <hr>
        </div>
    </div>
</div>

<div id=""SOLine"" style=""display: none"">
    <div class=""row"">
        <div class=""col-sm-12"" style=""padding: 3px;"">
            <div class=""table-responsive"">
                <table id=""TbSOLine"" class=""table table-striped table-bordered dt-responsive nowrap"" cellspacing=""0"" style=""background: #f0eff1; color: #696969; width: 100%;"">
                    <thead>
                    <tr>
                        <th>Item Code</th>
                        <th>Item Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>DiscPrcnt</th>
                        <th>VatGroup</th>
                        <th>Total</th>
                        <th>WhsCode</th>
                    </tr>
                    </thead>
                </table>
            </div>
            <br>
");
            WriteLiteral(@"            <div id=""TabScanBarCode"" class=""BoxScan"">
                <center>
                    <label>
                        <input type=""radio"" id=""rdoTypeScan"" name=""typeScan"" value=""01"" style=""height: 15px; vertical-align: middle; width: 15px;"" onclick=""checkBarcodeUDOM()""/>
                        <font size=""3"" style=""font-weight: bold"">Barcode UDOM</font>
                    </label>
                    &nbsp;&nbsp;&nbsp;
                    <label>
                        <input type=""radio"" id=""rdoTypeScan"" name=""typeScan"" value=""02"" style=""height: 15px; vertical-align: middle; width: 15px;"" onclick=""checkBarcodeProduct()""/>
                        <font size=""3"" style=""font-weight: bold"">Barcode Product</font>
                    </label>
                </center>

                <div id=""divBarcodeUDOM"" style=""display: none;"">
                    <div id=""TabQty"" style=""display: block;"">
                        Input Quantity :
                        <div class=""input-group"">");
            WriteLiteral("\r\n                            <input type=\"number\" class=\"form-control\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 11027, "\"", 11041, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtQuantity01"" value=""1"" style=""background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;"">
                            <button class=""btn btn-warning"" id=""btnUpdateQty"" style=""display: none; margin-left: 5px;"" onclick=""fncUpdateQty();"">Update Qty</button>
                        </div>
                    </div>
                    <div>
                        Scan Barcode :
                        <div class=""input-group"">
                            <input type=""text"" class=""form-control""");
            BeginWriteAttribute("value", " value=\"", 11588, "\"", 11596, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtScanBarCode01"" style=""background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;"" autocomplete=""off"">
                        </div>
                        <button class=""input-group-text"" id=""addRow01"" style=""display: none;"" autocomplete=""off"">
                            <i class=""fa fa-plus""></i>
                        </button>
                    </div>
                </div>

                <div id=""divBarcodeProduct"" style=""display: none;"">

                    <center>
                        <label>
                            <input type=""radio"" id=""rdoTypeItem1"" name=""typeItem"" value=""Batch"" style=""height: 12px; vertical-align: middle; width: 12px;"" onclick=""chTypeItem()""/>
                            <font size=""3"" style=""font-weight: bold"">Batch</font>
                        </label>
                        &nbsp;&nbsp;&nbsp;
                        <label>
                            <input type=""radio"" id=""rdoTypeItem2"" name=""type");
            WriteLiteral(@"Item"" value=""Serial"" style=""height: 12px; vertical-align: middle; width: 12px;"" onclick=""chTypeItem()""/>
                            <font size=""3"" style=""font-weight: bold"">Serial</font>
                        </label><br>
                    </center>
                    <label>
                        Input Quantity :
                    </label>
                    <div class=""input-group"">
                        <input type=""number"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 13093, "\"", 13107, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtQuantity02"" value=""1"" style=""background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;"" autocomplete=""off"" disabled>
                    </div>

                    <label>
                        Scan Barcode :
                    </label>
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("value", " value=\"", 13510, "\"", 13518, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtScanBarCode02"" style=""background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;"" autocomplete=""off"" disabled>
                    </div>

                    <label>
                        Scan Batch/Serial :
                    </label>
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("value", " value=\"", 13919, "\"", 13927, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtScanBatchSerial02"" style=""background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;"" autocomplete=""off"" disabled>
                    </div>
                    <button class=""input-group-text"" id=""addRow02"" style=""display: none;"">
                        <i class=""fa fa-plus""></i>
                    </button>
                </div>

            </div>
");
            WriteLiteral("\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"row\" style=\"padding: 10px;\">\r\n");
            WriteLiteral("        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalSaleOrder"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background: #f0eff1; color: #696969;"">
            <div class=""modal-header"">
                <b>List of Sale Order</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbSaleOrder"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background: #f0eff1; color: #696969;"">
                                <thead>
                                <tr>
                                    <th>DocNum</th>
                                    <th>DocEntry</th>
                                    <th>Posting Date</th>
                                    <th>CardCode</th>
                                    <th>CardName</th>
                              ");
            WriteLiteral(@"      <th>SlpCode</th>
                                    <th>SlpName</th>
                                </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseSO"" style=""background: #f0eff1; color: #696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" style=""background: #f0eff1; color: #696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalSeries"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background: #f0eff1; color: #696969;"">
            <div class=""modal-header"">
                <b>List of Series</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbSeries"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background: #f0eff1; color: #696969;"">
                                <thead>
                                <tr>
                                    <th>Series</th>
                                    <th>SeriesName</th>
                                    <th>YYYY-MM</th>
                                </tr>
                                </thead>
                            </table>
                        </div>
  ");
            WriteLiteral(@"                  </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseSeries"" style=""background: #f0eff1; color: #696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""CloseSeries"" style=""background: #f0eff1; color: #696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            WriteLiteral(@"<div class=""modal fade"" id=""ModalSaleEmployee"">
    <div class=""modal-dialog modal-xl"">
        <div class=""modal-content"" style=""background: #f0eff1; color: #696969;"">
            <div class=""modal-header"">
                <b>List of Sale Employee</b>
            </div>
            <div class=""modal-body"">
                <div class=""table-responsive"">
                    <div class=""row"">
                        <div class=""col-sm-12"">
                            <table id=""TbSaleEmployee"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background: #f0eff1; color: #696969;"">
                                <thead>
                                <tr>
                                    <th>SlpCode</th>
                                    <th>SlpName</th>
                                </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
           ");
            WriteLiteral(@"     </div>
            </div>
            <div class=""modal-footer"">
                <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseSlp"" style=""background: #f0eff1; color: #696969;"">Choose</button>
                <button class=""btn btn-info"" data-dismiss=""modal"" style=""background: #f0eff1; color: #696969;"">Close</button>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d0ad7057197326d42642c7c3dd3a21a93f18e0346383", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script type=""text/javascript"">

    function ClearTb() {
        //const table = $(""#TbLineStock"").DataTable();
        //table.clear().draw();
        location.reload();
    }

    //+++++ Series Code +++++
    var tableSeries = $('#TbSeries').DataTable({
        ""ajax"": {
            ""url"": '");
#nullable restore
#line 472 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
               Write(Url.Action("GetSeriesCode", "SaleOrder"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            ""type"": ""GET"",
            ""dataType"": ""JSON"",
            ""dataSrc"": 'data',
            ""complete"": function(data) {
                console.log(""GET Series Complete."");
            }
        },
        ""columns"": [
            { ""data"": ""series"" },
            { ""data"": ""seriesName"" },
            { ""data"": ""indicator"" }
        ],
        ""select"": true,
        ""paging"": false,
        ""ordering"": false,
        ""info"": false,
        ""searching"": false
    });
    tableSeries.on('select',
        function() {
            var cellCode = tableSeries.rows({ selected: true }).data()[0]['series'];
            var cellName = tableSeries.rows({ selected: true }).data()[0]['seriesName'];

            $('#ChooseSeries').click(function() {
                var xCode = document.getElementById(""txtSeries"");
                var xName = document.getElementById(""txtSeriesName"");
                xCode.value = cellCode;
                xName.value = cellName;
            });
 ");
            WriteLiteral("       });\r\n\r\n    // Get SaleEmployee\r\n    var tableSlp = $(\'#TbSaleEmployee\').DataTable({\r\n        \"ajax\": {\r\n            \"url\": \'");
#nullable restore
#line 507 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
               Write(Url.Action("GetSaleEmployee", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            ""type"": ""GET"",
            ""dataType"": ""JSON"",
            ""dataSrc"": 'data',
            ""complete"": function(data) {
                console.log(""GET SaleEmployee Complete."");
            }
        },
        ""columns"": [
            { ""data"": ""slpCode"" },
            { ""data"": ""slpName"" },
        ],
        ""paging"": false,
        ""ordering"": false,
        ""info"": false,
        ""select"": true
    });
    tableSlp.on('select',
        function() {
            var cellCode = tableSlp.rows({ selected: true }).data()[0]['slpCode'];
            var cellName = tableSlp.rows({ selected: true }).data()[0]['slpName'];

            $('#ChooseSlp').click(function() {
                var xCode = document.getElementById(""txtSlpCode"");
                var xName = document.getElementById(""txtSlpName"");
                xCode.value = cellCode;
                xName.value = cellName;
            });
        });

    //+++++ GetSaleOrder +++++
    var tbListSO = $('#TbSaleOrd");
            WriteLiteral("er\').DataTable({\r\n        \"ajax\": {\r\n            \"url\": \'");
#nullable restore
#line 540 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
               Write(Url.Action("GetSO", "SaleOrder"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            ""type"": ""GET"",
            ""dataType"": ""JSON"",
            ""dataSrc"": 'data',
            ""complete"": function(data) {
                console.log(""GetSO Complete."");
            }
        },
        ""columns"": [
            { ""data"": ""docNum"" },
            { ""data"": ""docEntry"" },
            { ""data"": ""docDate"" },
            { ""data"": ""cardCode"" },
            { ""data"": ""cardName"" },
            { ""data"": ""slpCode"" },
            { ""data"": ""slpName"" },
        ],
        ""order"": [[0, 'desc']],
        ""select"": true,
        ""paging"": false,
        ""ordering"": false,
        ""info"": false,
        ""searching"": false,
        ""responsive"": false
    });

    tbListSO.columns([1]).visible(false, false);

    tbListSO.on('select',
        function() {

            var celldocNum = tbListSO.rows({ selected: true }).data()[0]['docNum'];
            var cellcardCode = tbListSO.rows({ selected: true }).data()[0]['cardCode'];
            var cellcardName = tbListSO");
            WriteLiteral(@".rows({ selected: true }).data()[0]['cardName'];
            var celldocEntry = tbListSO.rows({ selected: true }).data()[0]['docEntry'];
            var cellslpCode = tbListSO.rows({ selected: true }).data()[0]['slpCode'];
            var cellslpName = tbListSO.rows({ selected: true }).data()[0]['slpName'];

            $('#ChooseSO').click(function() {
                var txtDocEntry = document.getElementById(""txtSODocEntry"");
                var txtDocNum = document.getElementById(""txtSODocNum"");
                var txtCardCode = document.getElementById(""CardCode"");
                var txtCardName = document.getElementById(""CardName"");
                var txtSlpCode = document.getElementById(""txtSlpCode"");
                var txtSlpName = document.getElementById(""txtSlpName"");

                txtDocNum.value = celldocNum;
                txtCardCode.value = cellcardCode;
                txtCardName.value = cellcardName;
                txtDocEntry.value = celldocEntry;
                txtS");
            WriteLiteral(@"lpCode.value = cellslpCode;
                txtSlpName.value = cellslpName;
            });
        });

    //GET DataLine From SO
    function fncGetSOLine() {

        if (document.getElementById(""txtSODocNum"").value != '') {
            var txtDocEntry = document.getElementById(""txtSODocEntry"");
            //var BinName = document.getElementById(""txtBinName"");
            $.noConflict();
            $.ajax({
                url: '");
#nullable restore
#line 603 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
                 Write(Url.Action("GetSOLine", "SaleOrder"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { docEntry: txtDocEntry.value },
                type: ""GET"",
                dataType: ""JSON"",
                ""dataSrc"": 'data',
                success: function(data) {
                    //document.getElementById(""tbDataLine"").style.display = ""block"";
                    //document.getElementById(""btnSave"").style.display = ""block"";
                    document.getElementById(""SOLine"").style.display = ""block"";

                    var tline = $('#TbSOLine').DataTable({
                        ""dom"": ""Bfrltip"",
                        ""bDestroy"": true,
                        ""aaData"": data.data,
                        ""autoWidth"": false,
                        ""lengthChange"": true,
                        ""ordering"": true,
                        ""pageLength"": 20,
                        ""lengthMenu"": [
                            [20, 50, 100, 200, -1],
                            [20, 50, 100, 200, ""All""]
                        ],
                      ");
            WriteLiteral(@"  ""columns"": [
                            { ""data"": ""itemCode"", ""width"": ""5%"" },
                            { ""data"": ""itemName"", ""width"": ""5%"" },
                            { ""data"": ""quatity"", ""width"": ""5%"" },
                            { ""data"": ""price"", ""width"": ""5%"" },
                            { ""data"": ""discPrcnt"", ""width"": ""5%"" },
                            { ""data"": ""vatGroup"", ""width"": ""5%"" },
                            { ""data"": ""lineTotal"", ""width"": ""5%"" },
                            { ""data"": ""whsCode"", ""width"": ""5%"" }
                        ],
                        ""language"": { ""emptyTable"": ""No Data"" },
                        ""order"": [[1, 'desc']],
                        ""info"": false,
                        ""searching"": false,
                        ""responsive"": false
                    });

                    //tline.columns([2, 4, 7, 8]).visible(false, false);
                    console.log(""Download Data Line Complete"");
                }
          ");
            WriteLiteral(@"  });


        } else {
            alert(""Please Selete SO DocNum!"");
        }
    }

    //Add Data In Row
    var t = $('#TbLineScan').DataTable({
        ""dom"": ""Bfrltip"",
        ""bDestroy"": true,
        ""autoWidth"": true,
        ""responsive"": true,
        ""lengthChange"": true,
        ""ordering"": true,
        ""pageLength"": 20,
        ""columns"": [
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 },
            { ""width"": ""20%"", ""targets"": 0 }
        ],
        ""select"": true,
        ""ordering"": false,
        ""info"": false,
        ""searching"": false,
        ""scrollX"": true,
        ""scrollY"": false
    }");
            WriteLiteral(@");

    //BarcodeUDOM
    $('#addRow01').on('click',
        function() {

            if ($('#txtScanBarCode01').val() != '') {

                var txtScanBarCode = document.getElementById(""txtScanBarCode01"").value;
                const strArr = txtScanBarCode.split("";"");
                //document.getElementById(""demo"").innerHTML = StrBarCodeArr[4];
                var sItemCode = strArr[0];
                var sBatch = strArr[1];
                var sSerial = strArr[2];
                var sBatchSerial;

                if (sBatch != '') {
                    sBatchSerial = sBatch;
                    $.ajax({
                        url: '");
#nullable restore
#line 699 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
                         Write(Url.Action("GetStockItemBatch", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { itemcode: sItemCode, batchnumber: sBatchSerial },
                        type: ""GET"",
                        dataType: ""JSON"",
                        ""dataSrc"": 'data',
                        success: function(data) {
                            var jqueryXml = $(data);
                            console.log(jqueryXml[0].data[0].itemCode);

                            //=========================
                            //jqueryXml[0].data[0].quantity
                            //jqueryXml[0].data[0].batchNumber
                            //jqueryXml[0].data[0].serialNumber
                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = document.getElementById(""txtQuantity01"").value;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].b");
            WriteLiteral(@"inEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                            var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                            //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
       ");
            WriteLiteral(@"                         bBinCode,
                                bUOMCode,
                                bExpDate,
                                bBatchNumber,
                                ''
                            ]).draw(false);

                            $('#txtScanBarCode01').val("""");
                            $('#txtScanBarCode01').focus();
                        }
                    });
                } else if (sSerial != '') {
                    sBatchSerial = sSerial;
                    $.ajax({
                        url: '");
#nullable restore
#line 748 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
                         Write(Url.Action("GetStockItemSerial", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { itemcode: sItemCode, serialnumber: sBatchSerial },
                        type: ""GET"",
                        dataType: ""JSON"",
                        ""dataSrc"": 'data',
                        success: function(data) {
                            var jqueryXml = $(data);
                            console.log(jqueryXml[0].data[0].itemCode);

                            //=========================
                            //jqueryXml[0].data[0].quantity
                            //jqueryXml[0].data[0].batchNumber
                            //jqueryXml[0].data[0].serialNumber
                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = document.getElementById(""txtQuantity01"").value;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].");
            WriteLiteral(@"binEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                            var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                            //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
      ");
            WriteLiteral(@"                          bBinCode,
                                bUOMCode,
                                bExpDate,
                                '',
                                bBatchNumber
                            ]).draw(false);

                            $('#txtScanBarCode01').val("""");
                            $('#txtScanBarCode01').focus();
                        }
                    });
                }
            }
        });
    $('#addRow01').click();

    var input01 = document.getElementById(""txtScanBarCode01"");
    input01.addEventListener(""keyup"",
        function(event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                document.getElementById(""addRow01"").click();
            }
        });


    //BarcodeProduct
    $('#addRow02').on('click',
        function() {

            if ($('#txtScanBatchSerial02').val() != '') {

                var getSelectedValue = document.querySelector('input[name=");
            WriteLiteral(@"""typeItem""]:checked');
                if (getSelectedValue != null) {
                    if (getSelectedValue.value == ""Batch"") {
                        if ($('#txtScanBatchSerial02').val() != '') {
                            $.ajax({
                                url: '");
#nullable restore
#line 820 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
                                 Write(Url.Action("GetStockItemBatch", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                                data: { itemcode: $('#txtScanBarCode02').val(), batchnumber: $('#txtScanBatchSerial02').val() },
                                type: ""GET"",
                                dataType: ""JSON"",
                                ""dataSrc"": 'data',
                                success: function(data) {
                                    var jqueryXml = $(data);
                                    if (jqueryXml[0].data[0].itemCode != '') {
                                        //=========================
                                        var bItemCode = jqueryXml[0].data[0].itemCode;
                                        var bItemName = jqueryXml[0].data[0].itemName;
                                        var bQuantity = document.getElementById(""txtQuantity02"").value;
                                        var bWhsCode = jqueryXml[0].data[0].whsCode;
                                        var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                ");
            WriteLiteral(@"                        var bBinCode = jqueryXml[0].data[0].binCode;
                                        var bBinEntry = jqueryXml[0].data[0].binEntry;
                                        var bUOMCode = jqueryXml[0].data[0].uomCode;
                                        var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                        var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                        //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                                        var bExpDate = jqueryXml[0].data[0].expDate;
                                        if (bExpDate == '1899-12-30T00:00:00') {
                                            bExpDate = '';
                                        } else {
                                            bExpDate = bExpDate;
                                        }

                                        if ($('#txtScanBarCode02').val(");
            WriteLiteral(@") != '') {
                                            t.row.add([
                                                bItemCode,
                                                bItemName,
                                                bQuantity,
                                                bWhsCode,
                                                bBinEntry,
                                                bBinCode,
                                                bUOMCode,
                                                bExpDate,
                                                bBatchNumber,
                                                ''
                                            ]).draw(false);
                                        } else {
                                            return false;
                                        }

                                        $('#txtScanBarCode02').val("""");
                                        $('#txtScanBatchSerial02').val("""");");
            WriteLiteral(@"
                                        $('#txtScanBarCode02').focus();
                                        //=========================

                                    } else {
                                        alert(""No ItemCode"");
                                    }

                                }
                            });
                        }
                    } else if (getSelectedValue.value == ""Serial"") {
                        if ($('#txtScanBatchSerial02').val() != '') {

                            $.ajax({
                                url: '");
#nullable restore
#line 880 "D:\VB\BarCode-System\BarCodeClientService\Views\SaleOrder\CreateSaleOrder.cshtml"
                                 Write(Url.Action("GetStockItemSerial", "Inventory"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                                data: { itemcode: $('#txtScanBarCode02').val(), serialnumber: $('#txtScanBatchSerial02').val() },
                                type: ""GET"",
                                dataType: ""JSON"",
                                ""dataSrc"": 'data',
                                success: function(data) {
                                    var jqueryXml = $(data);
                                    if (jqueryXml[0].data[0].itemCode != '') {
                                        //=========================
                                        var bItemCode = jqueryXml[0].data[0].itemCode;
                                        var bItemName = jqueryXml[0].data[0].itemName;
                                        var bQuantity = document.getElementById(""txtQuantity02"").value;
                                        var bWhsCode = jqueryXml[0].data[0].whsCode;
                                        var bWhsEntry = jqueryXml[0].data[0].whsEntry;
               ");
            WriteLiteral(@"                         var bBinCode = jqueryXml[0].data[0].binCode;
                                        var bBinEntry = jqueryXml[0].data[0].binEntry;
                                        var bUOMCode = jqueryXml[0].data[0].uomCode;
                                        var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                        var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                        //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                                        var bExpDate = jqueryXml[0].data[0].expDate;
                                        if (bExpDate == '1899-12-30T00:00:00') {
                                            bExpDate = '';
                                        } else {
                                            bExpDate = bExpDate;
                                        }

                                        if ($('#txtScanBarCode02').val");
            WriteLiteral(@"() != '') {
                                            t.row.add([
                                                bItemCode,
                                                bItemName,
                                                bQuantity,
                                                bWhsCode,
                                                bBinEntry,
                                                bBinCode,
                                                bUOMCode,
                                                bExpDate,
                                                '',
                                                bBatchNumber
                                            ]).draw(false);
                                        } else {
                                            return false;
                                        }

                                        $('#txtScanBarCode02').val("""");
                                        $('#txtScanBatchSerial02').val("""");");
            WriteLiteral(@"
                                        $('#txtScanBarCode02').focus();
                                        //=========================

                                    } else {
                                        alert(""No ItemCode"");
                                    }

                                }
                            });


                        }
                    }
                } else {
                    return false;
                }

            }

        });
    $('#addRow02').click();

    var input02 = document.getElementById(""txtScanBarCode02"");
    var input12 = document.getElementById(""txtScanBatchSerial02"");
    input02.addEventListener(""keyup"",
        function(event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                document.getElementById(""txtScanBatchSerial02"").focus();
                input12.addEventListener(""keyup"",
                    function(event) {
                   ");
            WriteLiteral(@"     if (event.keyCode === 13) {
                            event.preventDefault();
                            document.getElementById(""addRow02"").click();
                        }
                    });
            }
        });


    $('#btnDelRow').click(function() {
        t.row('.selected').remove().draw(false);
    });


    //var LDT = [];
    //$('#TblistSO').DataTable({
    //    responsive: true,
    //    bLengthChange: false,
    //    binfo: false,
    //    data: LDT,
    //    columns: [
    //        { data: ""docNum"", autoWidth: true },
    //        { data: ""webID"", autoWidth: true },
    //        { data: ""customerName"", autoWidth: true },
    //        { data: ""posuser"", autoWidth: true },
    //        { data: ""documentDate"", autoWidth: true },
    //        { data: ""docTotal"", autoWidth: true },
    //        { data: ""grossAmount"", autoWidth: true },
    //        { data: ""drawAmount"", autoWidth: true },
    //        { data: ""taxAmount"", autoWidth: true ");
            WriteLiteral(@"}
    //    ]
    //});

    //var dtSOList = $('#TblistSO').DataTable()
    //var dtLineSO = $('#TbSOLine').DataTable()
    //var dtSNBT = $('#TbSNBT').DataTable()
    //var dtDraft = $('#TBDraft').dataTable()
    //var dtDNL_Line = $('#DNL_Line').dataTable()
    //var dtTbSNBT_Update = $('#TbSNBT_Update').dataTable()

    //$('#ListSO').hide();
    //$('#SOLine').hide();
    //$('#SNBT').hide();
    //$('#Draft').hide();
    // $('#DLNline').hide();

    //$('#SelectSO').click(function () {
    //    alert(testDLN());
    //    $('#DLN').hide();
    //    $('#ListSO').show();

    //});

    //$('#ListSOChoose').click(function () {
    //    $('#DLN').hide();
    //    $('#ListSO').hide();
    //    $('#SOLine').show();
    //});

    //$('#btnSNBT').click(function () {
    //    $('#SOLine').hide();
    //    $('#SNBT').show();
    //});

    //$('#FindDraft').click(function () {
    //    $('#DLN').hide();
    //    $('#DLNline').hide();
    //    $('#Update_SNBT').hi");
            WriteLiteral("de();\r\n    //    $(\'#Draft\').show();\r\n\r\n    //});\r\n\r\n");
            WriteLiteral("</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
