#pragma checksum "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\GBinLocation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "67fe19ce064d5ae6db09cedca897e98d7b4c2191"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CreateLabelSticker_GBinLocation), @"mvc.1.0.view", @"/Views/CreateLabelSticker/GBinLocation.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"67fe19ce064d5ae6db09cedca897e98d7b4c2191", @"/Views/CreateLabelSticker/GBinLocation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"231de61c7d9a254eb8b39190aacae46b82b7984c", @"/Views/_ViewImports.cshtml")]
    public class Views_CreateLabelSticker_GBinLocation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Array.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery-3.3.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\GBinLocation.cshtml"
  
    ViewData["Title"] = "O2O";
    DateTime dt = DateTime.Now;
    ViewData["Date"] = dt.ToShortDateString();

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "67fe19ce064d5ae6db09cedca897e98d7b4c21915744", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main {
        position: absolute;
    }

    .color_tap {
        min-width: 60px;
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .nav-tabs .nav-link {
        border-radius: 0px 12px 0px 0px;
        border: 1px solid rgb(193, 193, 193);
        height: 40px;
        line-height: 20px;
    }

    .modal {
        z-index: 200000;
    }

    .modal-header {
        background: #5f95c3;
        height: 40px;
        color: #ffffff;
    }

        .modal-header b {
            margin-top: -10px;
        }

    #TbAR table tr td {
        position: relative !important;
        padding: 0px !important;
        height: 35px;
        margin-left: 15px;
        margin-top: 10px;
        background-color: none;
    }

    ");
            WriteLiteral(@"table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background: #94d8e1;
        color: red;
    }

        table tbody tr.selected td .clsinput {
            background: #94d8e1;
            color: red;
        }

    .clsinput:focus {
        outline: none;
    }
</style>
<div id=""#main"">
    <div class=""row"" style=""margin-left:5px;margin-top:5px;color:#696969;"">
        <h5 style=""margin-top:5px;color:#696969;""></h5>
    </div>
    <ul class=""nav nav-tabs Tap-PA"" id=""mytab"" role=""tablist"">
        <li class=""nav-item"">
            <a class=""nav-link active color_tap"" id=""create-tab"" data-toggle=""tab"" href=""#create"" role=""tab"" aria-controls=""Create"" aria-selected=""true"">Create</a>
        </li>
");
            WriteLiteral(@"    </ul>
    <div class=""tab-content"" id=""myTabContent"">
        <div class=""tab-pane fade show active"" id=""create"" role=""tabpanel"" aria-labelledby=""create-tab"">
            <div class=""row"" id=""BinCode"">
                <div class=""col-sm-8"" style=""padding: 10px;"">
");
            WriteLiteral(@"                    Bin Code :
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""binlocation""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 3328, "\"", 3342, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""binLocationCode"" readonly>
                        <div class=""input-group-append"">
                            <button class=""input-group-text btnbinLocation"" data-toggle=""modal"" data-target=""#ModalBinCode""><i class=""fa fa-search""></i></button>
                        </div>
                    </div>
                    Bin Name:
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""warehouse""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 4003, "\"", 4017, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""binName"" readonly>
                        <div class=""input-group-append"">
                            <button class=""input-group-text btnbin""><i class=""fa fa-search""></i></button>
                        </div>
                    </div>
                    <div class=""row"" style=""margin-top:15px; display:none;"">
                        <div class=""col-1""><label>Size: </label></div>
                        <div class=""col-9"">
                            <select size=""1"" class=""c16"" style=""width:250px;height:30px"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67fe19ce064d5ae6db09cedca897e98d7b4c219111057", async() => {
                WriteLiteral("4x10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            </select>\r\n                        </div>\r\n");
            WriteLiteral(@"                    </div><br>
                    <div class=""nav navbar-nav ml-auto"">
                        <button class=""btn btn-info"" id=""Add"" style=""background:#f0eff1;color:#696969"">Add Item</button>
                    </div>
                </div>
            </div>         
");
            WriteLiteral(@"            <div class=""modal fade"" id=""ModalBinCode"">
                <div class=""modal-dialog modal-xl"">
                    <div class=""modal-content"" style=""background:#f0eff1;color:#696969;"">
                        <div class=""modal-header"">
                            <b>List of Bin Location</b>
                        </div>
                        <div class=""modal-body"">
                            <div class=""table-responsive"">
                                <div class=""row"">
                                    <div class=""col-sm-12"">
                                        <table id=""tbBinLocations"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                            <thead>
                                                <tr>
                                                    <th>Bin Code</th>
                                                    <th>Bin Name</th>
        ");
            WriteLiteral(@"                                            <th>Warehouse</th>
                                                    <th>Warehouse Name</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseBinLocation"" style=""background:#f0eff1;color:#696969;"">Choose</button>
                            <button class=""btn btn-info"" data-dismiss=""modal"" style=""background:#f0eff1;color:#696969;"">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-sm-12"" style=""padding-left: 5px;"">
                    <");
            WriteLiteral(@"div class=""table-responsive"">
                        <table id=""TbGBin"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;margin-bottom:10px;"">
                            <thead>
                                <tr>
");
            WriteLiteral(@"                                    <th>Warehouse </th>
                                    <th>Bin Code</th>
                                    <th>Bin Name</th>
                                    <th>Command</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <br />
                <button class=""btn btn-success"" id=""Print"" style=""margin-left:5px;margin-top:20px;"">Print</button>
            </div>
        </div>
    </div>
</div>
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67fe19ce064d5ae6db09cedca897e98d7b4c219115758", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67fe19ce064d5ae6db09cedca897e98d7b4c219116802", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "67fe19ce064d5ae6db09cedca897e98d7b4c219117846", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    <script type=""text/javascript"">
        // First. Action on nav-tabs
        $('.next').click(function () {
            $('.nav-tabs > .nav-item > .active').parent().next('li').find('a').trigger('click');
            $('.next').prop('hidden', true);
            $('.previous').prop('hidden', false);
        });
        $('.previous').click(function () {
            $('.nav-tabs > .nav-item > .active').parent().prev('li').find('a').trigger('click');
            $('.previous').prop('hidden', true);
            $('.next').prop('hidden', false);
        });
        if ($(""#create-tab"").hasClass('active') == true) {
            $('.previous').prop('hidden', true);
        }
        if ($(""#print-tab"").hasClass('active') == true) {
            $('.next').prop('hidden', true);
        }
        $('#create-tab').click(function () {
            console.log(""hello"");
            $('.previous').prop('hidden', true);
            $('.next').prop('hidden', false);
        });
        $('#print");
            WriteLiteral(@"-tab').click(function () {
            $('.next').prop('hidden', true);
            $('.previous').prop('hidden', false);
        });

    // End Get Warehouse
    // 2. Get BinLocation
    $('#tbBinLocations').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LBins,
        columns: [
            { data: ""binCode"", autoWidth: true },
            {data: ""descr"",autoWidth:true},
            { data: ""whsCode"", autoWidth: true },
            { data: ""whsName"", autoWidth: true }
            ]
    });

    var tbBin = $('#tbBinLocations').DataTable();
    var LBins = [];
    $('#tbBinLocations tbody').on('click', 'tr', function () {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            tbBin.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
        }
    });

    $("".btnbinLocation"").click(function () {
        $(""#ModalBinCode"").modal({backdrop:""stat");
            WriteLiteral("ic\"});\r\n        $.ajax({\r\n            url: \'");
#nullable restore
#line 257 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\GBinLocation.cshtml"
             Write(Url.Action("GetBinLocation", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET"",
            dataType: ""JSON"",
            success: function (data) {
                console.log(data);
                LBins=[]
                LBins = data.data
                tbBin.clear();
                tbBin.rows.add(LBins);
                tbBin.draw();
            }
        });
    });
        var whsCode;
    $('#ChooseBinLocation').click(function () {
        var index = tbBin.row('.selected').index();
        var data = tbBin.row(index).data();
        $('#binLocationCode').val(data.binCode);
        $('#binName').val(data.descr);
        whsCode = data.whsCode;
    });
    // END Get BinLocation
        var BinCode=[];
        //4. Add Bin Information into table
        $('#TbGBin').DataTable({
            bLengthChange: false,
            binfo: false,
            data: allbinLInes,
            columns: [
                /*{ data: ""code"", autoWidth: true },*/
                { data: ""whsCode"", autoWidth: true },
                { data: ");
            WriteLiteral(@"""binCode"", autoWidth: true },
                { data: ""descr"", autoWidth: true },
                { render: function (data, type, full, meta) { return '<button class=""btn-sm btn-danger"" style=""margin-left:40%;"" onClick=""remove(' + meta.row + ')""> <i class=""fas fa-trash-alt""></i></button>'; } }

            ]
        });
        var table = $('#TbGBin').DataTable();
        var allbinLInes = [];
        var allbinLineLs = [];
        var i = 1;
        var binLines = {};
        $('#Add').click(function () {
            binLines = {};
            if ($('#binLocationCode').val() != """") {
                //binLines.code = i.toString().padStart(4, '0');
                binLines.whsCode = whsCode;
                binLines.binCode = $('#binLocationCode').val();
                binLines.descr = $('#binName').val();
                allbinLInes.push(binLines);
                table.clear();
                table.rows.add(allbinLInes);
                table.draw();
                $('#Code').val(""");
            WriteLiteral(@""");
                $('#binName').val("""");
                $('#binLocationCode').val("""");
                i = i + 1;
            }

        });
        // END Adding Bin Information
        // Print Label Sticker for Bin Location
        
        $('#Print').click(function () {

            //console.log(allbinLInes);

            var print = {};
            print.Data = allbinLInes;
            if (allbinLInes.length > 0) {
                 $.ajax({
                url: '");
#nullable restore
#line 328 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\GBinLocation.cshtml"
                 Write(Url.Action("PrintBinLabelPDFAction", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                type: \"POST\",\r\n                data: { print: print },\r\n                dataType: \"JSON\",\r\n                success: function (data) {\r\n                if (data == 1) {\r\n                    window.location.href = \"");
#nullable restore
#line 334 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\GBinLocation.cshtml"
                                       Write(Url.Action("PrintBinLabelPDF", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                }
                }
            });
            }


        });
        //button generate code
        $('#btnGCode').click(function () {
            var date = new Date();
            var year = date.getFullYear().toString().slice(-2);
            var mn = String(date.getMonth() + 1).padStart(2, '0');
            var day = String(date.getDate()).padStart(2, '0');
            var hr = date.getHours();
            var min = date.getMinutes();
            var ms = date.getSeconds();
            $('#Code').val(year + mn + day + hr + min + ms);

        });
        // Remove row from Table
        function remove(row) {
            var data = table.row(row).data();
            if (confirm(""Do you want to delete?"") == true){
                helper.removeOne(allbinLInes, row => row.binCode === data.binCode);
                table.clear();
                table.rows.add(allbinLInes);
                table.draw();
            }
        }

    </script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
