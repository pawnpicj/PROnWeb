#pragma checksum "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CreateLabelSticker_ItemMaster), @"mvc.1.0.view", @"/Views/CreateLabelSticker/ItemMaster.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\_ViewImports.cshtml"
using BarCodeClientService.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e", @"/Views/CreateLabelSticker/ItemMaster.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"231de61c7d9a254eb8b39190aacae46b82b7984c", @"/Views/_ViewImports.cshtml")]
    public class Views_CreateLabelSticker_ItemMaster : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Array.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery-3.3.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/DataTable/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
  
    ViewData["Title"] = "Item-Sticker";
    DateTime dt = DateTime.Now;
    ViewData["Date"] = dt.ToShortDateString();

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e6032", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<link href=""https://fonts.googleapis.com/icon?family=Material+Icons"" rel=""stylesheet"">
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main {
        position: absolute;
    }

    .color_tap {
        min-width: 60px;
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .nav-tabs .nav-link {
        border-radius: 0px 12px 0px 0px;
        border: 1px solid rgb(193, 193, 193);
        height: 40px;
        line-height: 20px;
    }

    .modal {
        z-index: 200000;
    }

    .modal-header {
        background: #5f95c3;
        height: 40px;
        color: #ffffff;
    }

        .modal-header b {
            margin-top: -10px;
        }

    #TbAR table tr td {
        position: relative !important;
        padding: 0px !important;
        h");
            WriteLiteral(@"eight: 35px;
        margin-left: 15px;
        margin-top: 10px;
        background-color: none;
    }

    table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background: #94d8e1;
        color: red;
    }

        table tbody tr.selected td .clsinput {
            background: #94d8e1;
            color: red;
        }

    .clsinput:focus {
        outline: none;
    }

    .loader {
        position: absolute;
        left: 50%;
        top: 50%;
        z-index: 1;
        width: 120px;
        height: 120px;
        margin: -76px 0 0 -76px;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
    }
    .backg {
        position: absolute;
        left: 1%;
        top: 1%;
        z-index: 1;
        width: 500px;
        height: 750px;
     ");
            WriteLiteral(@"   /*margin: 0 0 0 0;*/
        background: rgba(20,20,20,0.4);
    }

    .txtb {
        display: block;
        height: calc(1.5em + .75rem + 2px);
        padding: .375rem .75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    /* =================================================== */
        .cover-spin {
            position:fixed;
            width:100%;
            left:0;right:0;top:0;bottom:0;
            background-color: rgba(255,255,255,0.7);
            z-index:9999;
            display:none;
        }

        ");
            WriteLiteral("@-webkit-keyframes spin {\r\n\t        from {-webkit-transform:rotate(0deg);}\r\n\t        to {-webkit-transform:rotate(360deg);}\r\n        }\r\n\r\n        ");
            WriteLiteral(@"@keyframes spin {
	        from {transform:rotate(0deg);}
	        to {transform:rotate(360deg);}
        }

        .cover-spin::after {
            content:'';
            display:block;
            position:absolute;
            left:48%;top:40%;
            width:40px;height:40px;
            border-style:solid;
            border-color:black;
            border-top-color:transparent;
            border-width: 4px;
            border-radius:50%;
            -webkit-animation: spin .8s linear infinite;
            animation: spin .8s linear infinite;
        }
    /* =================================================== */

</style>

<div id=""#main"">
    <div class=""row"" style=""margin-left:5px;margin-top:5px;color:#696969;"">
        <h5 style=""margin-top:5px;color:#696969;""></h5>
    </div>
    <ul class=""nav nav-tabs Tap-PA"" id=""mytab"" role=""tablist"">
        <li class=""nav-item"">
            <a class=""nav-link active color_tap"" id=""create-tab"" data-toggle=""tab"" href=""#create"" r");
            WriteLiteral("ole=\"tab\" aria-controls=\"Create\" aria-selected=\"true\">Generate Item</a>\r\n        </li>\r\n");
            WriteLiteral(@"    </ul>
    <div class=""tab-content"" id=""myTabContent"">
        <div class=""tab-pane fade show active"" id=""create"" role=""tabpanel"" aria-labelledby=""create-tab"">
            <div class=""row"" id=""BinCode"">
                <div class=""col-sm-8"" style=""padding: 10px;"">
                    Item :
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""GItemCode""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 5183, "\"", 5197, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""ItemCode"" readonly>

                        <div class=""input-group-append"">
                            <button class=""input-group-text btnItemCode"" data-toggle=""modal"" data-target=""#ModalItemCode""><i class=""fa fa-search""></i></button>
                        </div>
                    </div>
                    Item Name :
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""GItemName""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 5853, "\"", 5867, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""ItemName"" readonly>
                    </div>

                    Batch / SN:
                    <div class=""col-12"" style=""padding-left:2px;padding-right:10px"">
                        <div class=""row"">
                            <div class=""col-12"">
                                <div class=""input-group"">
                                    <div class=""input-group-prepend"">
                                        <button class=""input-group-text"" id=""GbatchSN""><i class=""fa fa-check""></i></button>
                                    </div>
                                    <input type=""text""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 6489, "\"", 6503, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"batchSN\"");
            BeginWriteAttribute("value", " value=\"", 6517, "\"", 6525, 0);
            EndWriteAttribute();
            WriteLiteral(@" autocomplete=""off"" size=""25"" required>
                                    <button class=""btn btn-info"" id=""btnSearchItem"" style=""background:#f0eff1;color:#696969""><i class=""fa fa-play-circle"" aria-hidden=""true""></i></button>
                                    <button class=""btn btn-info"" id=""btnAuto"" style=""background:#f0eff1;color:#696969"">Generate</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    Food And Drug No. (อย.):
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""GexpireDate""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 7396, "\"", 7410, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""txtFDA"" readonly style=""display:block"">

                    </div>

                    Product Group :
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""GProductGroup""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""text"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 7845, "\"", 7859, 0);
            EndWriteAttribute();
            WriteLiteral(@" id=""ProductGroup"" readonly>
                    </div>

                    Expired Date:
                    <div class=""input-group"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""GexpireDate""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""date"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 8272, "\"", 8286, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"expireDate\" required>\r\n\r\n                    </div>\r\n\r\n                    UOM:\r\n                    <div class=\"input-group\">\r\n                        <input type=\"number\" id=\"txtNumber1\" style=\"width: 80px\"");
            BeginWriteAttribute("placeholder", " placeholder=\"", 8500, "\"", 8514, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""txtb""/>
                        <select id=""cbUnitSmall"" style=""width: 100px"" class=""txtb""></select>
                        <font style=""font-weight:bold"" size=""3"">&nbsp;:&nbsp;</font>
                        <input type=""number"" id=""txtNumber2"" style=""width: 80px""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 8792, "\"", 8806, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"txtb\"/>\r\n                        <select id=\"cbUnitBig\" style=\"width: 100px\" class=\"txtb\"></select>\r\n");
            WriteLiteral(@"                    </div>

                    Quantity :
                    <div class=""input-group"" style=""margin-bottom:20px"">
                        <div class=""input-group-prepend"">
                            <button class=""input-group-text"" id=""binlocation""><i class=""fa fa-check""></i></button>
                        </div>
                        <input type=""number"" value=""1"" class=""form-control""");
            BeginWriteAttribute("placeholder", " placeholder=\"", 9437, "\"", 9451, 0);
            EndWriteAttribute();
            WriteLiteral(" id=\"Qty\" required>\r\n");
            WriteLiteral(@"                    </div>
                    <div class=""col-12"">
                        <div class=""row"" style=""display:none"">
                            <div class=""col-2"" style=""padding-left:2px"">
                                <label>Sticker Size :</label>
                            </div>
                            <div class=""col-8"" style=""padding-left:5px"">
                                <div class=""input-group"">
                                    <div class=""input-group-prepend"">
                                        <div class=""col-sm-4"">
                                            <select size=""1"" class=""c16"" id=""labelSize"" style=""width:210px;height:30px"">
                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e18788", async() => {
                WriteLiteral("4.5x7 cm");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e19998", async() => {
                WriteLiteral("7x6 cm");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class=""nav navbar-nav ml-auto"" style="" padding: 5px; "">
                        <button class=""btn btn-info"" id=""Add"" style=""background:#f0eff1;color:#696969"">Add Item</button>
                    </div>
                </div>
            </div>
");
            WriteLiteral(@"            <div class=""modal fade"" id=""ModalItemCode"">
                <div class=""modal-dialog modal-xl"">
                    <div class=""modal-content"" style=""background:#f0eff1;color:#696969;"">
                        <div class=""modal-header"">
                            <b>List of ItemCode</b>
                        </div>
                        <div class=""modal-body"">
                            <div class=""table-responsive"">
                                <div class=""row"">
                                    <div class=""col-sm-12"">
                                        <table id=""tbItem"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;"">
                                            <thead>
                                                <tr>
                                                    <th>Item Code</th>
                                                    <th>Item Name</th>
                 ");
            WriteLiteral(@"                                   <th>Product Group</th>
                                                    <th>Batch</th>
                                                    <th>Serial</th>
                                                    <th>FDA</th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button class=""btn btn-info"" data-dismiss=""modal"" id=""ChooseItem"" style=""background:#f0eff1;color:#696969;"">Choose</button>
                            <button class=""btn btn-info"" data-dismiss=""modal"" style=""background:#f0eff1;color:#696969;"">Close</button>
                        </div>
                    </div>
                </div>
            </div>
      ");
            WriteLiteral(@"      <div class=""row"">
                <div class=""col-sm-12"" style=""padding-left: 5px;padding-top:20px;"">
                    <div class=""table-responsive"">
                        <table id=""TbListItem"" class=""table table-striped table-bordered dt-responsive nowrap"" width=""100%"" cellspacing=""0"" style=""background:#f0eff1;color:#696969;margin-bottom:10px;"">
                            <thead>
                                <tr>
                                    <th>ItemCode </th>
                                    <th>Item Name </th>
                                    <th>Quantity</th>
                                    <th>Product Group</th>
                                    <th>Batch/SN</th>
                                    <th>Exp.Date</th>
                                    <th>UOM</th>
                                    <th>FDA</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
       ");
            WriteLiteral(@"         </div>
                <br />
                <button class=""btn btn-success"" id=""Print"" style=""margin-left:5px;"">Print</button>
                &nbsp;&nbsp;&nbsp;
                <button class=""btn btn-success"" id=""Print3x"" style=""margin-left:5px;"">Print 3x</button>
            </div>
        </div>
    </div>
    <div class=""d-none"" id=""body1"">
        <div class=""row"">
            <div class=""col-12"" style=""text-align:center"">
                <h1>
                    <label>Print Item Lable</label>
                </h1>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-2"">
                <div class=""col-6""><button onclick=""window.history.back();"" class=""button"">Back</button></div>
            </div>
            <div class=""col-10"">
                <p align=""right"">
");
            WriteLiteral("                    <button class=\"button\" onclick=\"PrintPDF();\">PDF</button>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n");
            WriteLiteral("    </div>\r\n</div>\r\n\r\n<div id=\"frmLoading\" class=\"cover-spin\" style=\"display:none\">\r\n");
            WriteLiteral("</div>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e26232", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e27272", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7434cab7b74e8d60ba4ae7a9b7d1f9f1fc40894e28312", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script type=""text/javascript"">
    //document.getElementById(""batchSN"").focus();
    //Get Item Master
    $('#tbItem').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LWhs,
        columns: [
            { data: ""itemCode"", autoWidth: true },
            { data: ""itemName"", autoWidth: true },
            //{ data: ""itemFName"", autoWidth: true },
            { data: ""itemGroup"", autoWidth: true },
            { data: ""manBtchNum"", autoWidth: true },
            { data: ""manSerNum"", autoWidth: true },
            //{ data: ""UOM"", autoWidth: true },
            {data:""fda"",autoWidth:true}

        ]
    });


    //ComboBox UOM
    //$('#cbUnit').on('change', function () { });
        $.ajax({
            url: '");
#nullable restore
#line 414 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
             Write(Url.Action("GetUOMList", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET"",
            dataType: ""JSON"",
            success: function (valx) {
                $(""#cbUnitSmall"").empty();
                var text = """";
                var jqueryXml = $(valx);
                text += ""<option value=''>Select</option>"";
                for (var i = 0; i < jqueryXml[0].data.length; i++) {
                    text += ""<option values="" + jqueryXml[0].data[i].uomCode + "">"" + jqueryXml[0].data[i].uomCode + ""</option >"";
                    //$(""#cbUnit"").append('<option value=""' + jqueryXml[0].data[i].uomCode + '"">' + jqueryXml[0].data[i].uomCode + ""</option>"");
                    //console.log(jqueryXml[0].data[i].uomCode);
                }
                $(""#cbUnitSmall"").html(text);
            },
            error: function (erro) {
                console.log(erro.responseText);
            }
        });

        $.ajax({
            url: '");
#nullable restore
#line 435 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
             Write(Url.Action("GetUOMList2", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET"",
            dataType: ""JSON"",
            success: function (valx) {
                $(""#cbUnitBig"").empty();
                var text = """";
                var jqueryXml = $(valx);
                text += ""<option value=''>Select</option>"";
                for (var i = 0; i < jqueryXml[0].data.length; i++) {
                    text += ""<option values="" + jqueryXml[0].data[i].uomCode + "">"" + jqueryXml[0].data[i].uomCode + ""</option >"";
                    //$(""#cbUnit"").append('<option value=""' + jqueryXml[0].data[i].uomCode + '"">' + jqueryXml[0].data[i].uomCode + ""</option>"");
                    //console.log(jqueryXml[0].data[i].uomCode);
                }
                $(""#cbUnitBig"").html(text);
            },
            error: function (erro) {
                console.log(erro.responseText);
            }
        });

    //Mix UOM
    function mixUom() {
        
    }

    var tbWhs = $('#tbItem').DataTable();
    var LWhs = [];
    $('#tbItem");
            WriteLiteral(@" tbody').on('click', 'tr', function () {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        }
        else {
            tbWhs.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
        }
    });
    $("".btnItemCode"").click(function () {
        $(""#ModalItemCode"").modal({backdrop:""static""});
        $.ajax({
            url: '");
#nullable restore
#line 474 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
             Write(Url.Action("GetItemMaster", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET"",
            dataType: ""JSON"",
            success: function (data) {
                //console.log(data);
                LWhs = []
                LWhs = data.data
                tbWhs.clear();
                tbWhs.rows.add(LWhs);
                tbWhs.draw();
                //console.log(""Hello"");
            }
        });
    });
    var FDA;
    var batch;
    var serial;
    $('#ChooseItem').click(function () {
        var index = tbWhs.row('.selected').index();
        var data = tbWhs.row(index).data();
        $('#ItemCode').val(data.itemCode);
        $('#ItemName').val(data.itemName);
        $('#ProductGroup').val(data.itemGroup);

        //console.log(data);
        //var bExpDate = data.expDate;
        //let isExpDate = bExpDate.substring(0, 10);
        //$('#expireDate').val(isExpDate);

        let fda13 = data.fda
        let mixfda = """";

        if (fda13.length > 1) {
            let set1 = fda13.substring(0, 2);
          ");
            WriteLiteral(@"  let set2 = fda13.substring(3, 2);
            let set3 = fda13.substring(3, 8);
            let set4 = fda13.substring(8, 9);
            let set5 = fda13.substring(9, 13);
            mixfda = set1 + ""-"" + set2 + ""-"" + set3 + ""-"" + set4 + ""-"" + set5;
        } else {
            mixfda = """";
        }

        $('#txtFDA').val(data.fda);
        //FDA = ""1234"";
        batch = data.manBtchNum;
        serial = data.manSerNum;


        document.getElementById(""batchSN"").focus();
    });
    // Add Item to Table
    $('#TbListItem').DataTable({
        bLengthChange: false,
        binfo: false,
        data: allbinLInes,
        columns: [
            { data: ""itemCode"", autoWidth: true },
            { data: ""itemName"", autoWidth: true },
            { data: ""quantity"", autoWidth: true},
            { data: ""productCode"", autoWidth: true },
            { data: ""batchSN"", autoWidth: true },
            { data: ""expDate"", autoWidth: true },
            { data: ""UOM"", autoWidth: ");
            WriteLiteral(@"true },
            { data: ""fda"",autoWidth:true}
        ]
    });
    //$('#TbListItemPrint').DataTable({
    //    bLengthChange: false,
    //    binfo: false,
    //    data: allbinLInes,
    //    columns: [
    //        { data: ""no"", autoWidth: true },
    //        { data: ""itemCode"", autoWidth: true },
    //        { data: ""itemName"", autoWidth: true },
    //        { data: ""itemQty"", autoWidth: true },
    //        { data: ""itemGroup"", autoWidth: true },
    //        { data: ""itemBatchSN"", autoWidth: true },
    //        { data: ""itemExpDate"", autoWidth: true }
    //    ]
    //});
    //TbListItemPrint
    var table = $('#TbListItem').DataTable();
/*    var tableprint = $('#TbListItemPrint').DataTable();*/
    var HeaderLs = [];
    var allbinLInes = [];
    var allitemLInes = [];
    var No = 1;
    var Qty = 0;
    var check = 0;
    var itemLines = {};
    $('#Add').click(function () {
        //=== Start Mix UOM ===
        var number1 = document.getElementB");
            WriteLiteral(@"yId(""txtNumber1"").value;
        var number2 = document.getElementById(""txtNumber2"").value;
        var unitSmall = document.getElementById(""cbUnitSmall"").value;
        var unitBig = document.getElementById(""cbUnitBig"").value;

        var uomsmall = '';
        var uombig = '';

        uomsmall = number1 + '' + unitSmall;


        if (number2 != '') {
            uombig = '/' + number2 + '' + unitBig;
        }

        var valMixUom = '' + uomsmall + uombig;
        //=== End Mix UOM ===


        console.log(batch + ""-"" + serial);
        allitemLInes = [];
        //allitemLInes = [];
        //HeaderLs = [];
        itemLines = {};
        Qty = $('#Qty').val();
        //console.log(Qty);
        // && $('#expireDate').val() != """"
        if ($('#expireDate').val() == """") {
            txtExpireDate = ""1899-12-30"";
        } else {
            txtExpireDate = $('#expireDate').val();
        }
        console.log($('#expireDate').val());
        if ($('#ItemCode').val(");
            WriteLiteral(@") != """" && $('#ItemName').val() != """" && $('#Qty').val() != """" && $('#ProductGroup').val() != """" && $('#batchSN').val() != """") {
            if (batch == ""Y"") {
                for (var i = 0; i < Qty; i++) {
                    allitemLInes = [];
                    //itemLines.no = i+1;
                    itemLines.itemCode = $('#ItemCode').val() + """";
                    itemLines.itemName = $('#ItemName').val() + """";
                    itemLines.quantity = 1;
                    itemLines.productCode = $('#ProductGroup').val() + "" "";
                    itemLines.batchSN = $('#batchSN').val() + """";
                    itemLines.expDate = txtExpireDate + """";
                    itemLines.UOM = valMixUom + """";
                    itemLines.fda = $('#txtFDA').val();
                    itemLines.concatText = ""- "" + $('#ItemCode').val() + ""\n- "" + $('#ItemName').val() + ""\n- "" + $('#ProductGroup').val();
                    itemLines.concatText2 = $('#ItemCode').val() + "";"" + $('#batchSN').val");
            WriteLiteral(@"() + "";;"" + $('#expireDate').val() + "";"" + i.toString().padStart(4, '0') + """";
                    allitemLInes.push(itemLines);
                    HeaderLs.push(itemLines);
                    table.rows.add(allitemLInes).draw(false);
                    console.log(""Add Batch Number."");
                }

            }

                if (serial == ""Y"") {
                    for (var i = 0; i < Qty; i++) {
                        allitemLInes = [];
                        //itemLines.no = i.toString().padStart(4, '0') + """";
                        itemLines.itemCode = $('#ItemCode').val() + """";
                        itemLines.itemName = $('#ItemName').val() + """";
                        itemLines.quantity = 1;
                        itemLines.productCode = $('#ProductGroup').val() + """";
                        itemLines.batchSN = $('#batchSN').val() + """";
                        itemLines.expDate = txtExpireDate + """";
                        itemLines.UOM = valMixUom + """";
         ");
            WriteLiteral(@"               itemLines.fda = $('#txtFDA').val();
                        itemLines.concatText = ""- "" + $('#ItemCode').val() + ""\n- "" + $('#ItemName').val() + ""\n- "" + $('#ProductGroup').val();
                        itemLines.concatText2 = $('#ItemCode').val() + "";;"" + $('#batchSN').val() + i.toString().padStart(2, '0') + "";"" + $('#expireDate').val() + "";"" + i.toString().padStart(4, '0') + """";
                        allitemLInes.push(itemLines);
                        HeaderLs.push(itemLines);
                        table.rows.add(allitemLInes).draw(false);
                        console.log(""Add Serial Number."");
                    }
                }
                if (batch == ""N"" && serial == ""N"") {
                    for (var i = 0; i < Qty; i++) {
                        allitemLInes = [];
                        //itemLines.no = i.toString().padStart(4, '0');
                        itemLines.itemCode = $('#ItemCode').val() + """";
                        itemLines.itemName = $('#");
            WriteLiteral(@"ItemName').val() + """";
                        itemLines.quantity = 1;
                        itemLines.productCode = $('#ProductGroup').val() + "" "";
                        itemLines.batchSN = $('#batchSN').val() + """";
                        itemLines.expDate = txtExpireDate + """";
                        itemLines.UOM = valMixUom + """";
                        itemLines.fda = $('#txtFDA').val();
                        itemLines.concatText = ""- "" + $('#ItemCode').val() + ""\n\n-"" + $('#ItemName').val() + ""\n\n-"" + $('#ProductGroup').val();
                        itemLines.concatText2 = $('#ItemCode').val() + "";;;"" + $('#expireDate').val() + "";"" + i.toString().padStart(4, '0') + """";
                        allitemLInes.push(itemLines);
                        HeaderLs.push(itemLines);
                        //itemLines = {};
                        table.rows.add(allitemLInes).draw(false);
                        console.log(""Add No Batch/Serial Number."");
                    }
              ");
            WriteLiteral(@"      //table.clear();
                    //table.rows.add(allitemLInes).draw(false);
            }

            //$('#ItemCode').val("""");
            //$('#ItemName').val("""");
            $('#Qty').val(""1"");
            //$('#ProductGroup').val("""");
            $('#batchSN').val("""");
            $('#expireDate').val("""");
            $('#txtFDA').val("""");

            $('#txtNumber1').val("""");
            $('#cbUnitSmall').val("""");
            $('#txtNumber2').val("""");
            $('#cbUnitBig').val("""");

            document.getElementById(""batchSN"").focus();
            }

        });
    //Table waitig for Print
    //Print3x

    $('#Print').click(function () {

        //var headstr = ""<html><head><style>table.table-bordered{border:1px solid black;margin-top:20px;}table.table-bordered > thead > tr > th{border:1px solid black;}table.table-bordered > tbody > tr > td{border:1px solid black;}</style></head><body>"";
        //var footstr = ""</body>"";
        //var item = document");
            WriteLiteral(@".getElementById(""body1"").innerHTML;
        //document.body.innerHTML = headstr + item + footstr;dfdsd

        //print.Data = allitemLInes;
        /*if (allitemLInes.length > 0) { }*/
        var sLine = [];
        var arrayLine = {};
        var print = {};
        for (let rr = 0; rr < table.column(0).data().length; rr++) {
            arrayLine = {};
            var data = table.row(rr).data();
            arrayLine.itemCode = data.itemCode;
            arrayLine.itemName = data.itemName;
            arrayLine.productCode = data.productCode;
            arrayLine.quantity = data.quantity;
            arrayLine.concatText = data.concatText;
            arrayLine.concatText2 = data.concatText2;
            arrayLine.expDate = data.expDate;
            arrayLine.batchSN = data.batchSN;
            arrayLine.fda = data.fda;
            arrayLine.UOM = data.UOM;
            sLine.push(arrayLine);
        }
        console.log(sLine);

        print.Data = sLine;
        if (sLine.le");
            WriteLiteral("ngth > 0) {\r\n            if ($(\'#labelSize\').val() == \'0\') {\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 720 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                 Write(Url.Action("PrintItemLablePDFAction", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                type: \"POST\",\r\n                data: { print: print},\r\n                dataType: \"JSON\",\r\n                success: function (data) {\r\n                    if (data == 1) {\r\n                        window.location.href = \"");
#nullable restore
#line 726 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                                           Write(Url.Action("PrintItemLablePDF", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";//170x264\r\n                }\r\n                }\r\n            });\r\n        }\r\n        if ($(\'#labelSize\').val() == \'1\') {\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 733 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                 Write(Url.Action("PrintItemLablePDFAction", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n                type: \"POST\",\r\n                data: { print: print},\r\n                dataType: \"JSON\",\r\n                success: function (data) {\r\n                if (data == 1) {\r\n                    window.location.href = \"");
#nullable restore
#line 739 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                                       Write(Url.Action("PrintItemLablePDFSecon", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";//264x226
                }
                }
            });
        }
        }


    });

    $('#Print3x').click(function () {

        //var headstr = ""<html><head><style>table.table-bordered{border:1px solid black;margin-top:20px;}table.table-bordered > thead > tr > th{border:1px solid black;}table.table-bordered > tbody > tr > td{border:1px solid black;}</style></head><body>"";
        //var footstr = ""</body>"";
        //var item = document.getElementById(""body1"").innerHTML;
        //document.body.innerHTML = headstr + item + footstr;dfdsd

        //print.Data = allitemLInes;
        /*if (allitemLInes.length > 0) { }*/
        var sLine = [];
        var arrayLine = {};
        var print = {};
        for (let rr = 0; rr < table.column(0).data().length; rr++) {
            arrayLine = {};
            var data = table.row(rr).data();
            arrayLine.itemCode = data.itemCode;
            arrayLine.itemName = data.itemName;
            arrayLine.productCode = data.pro");
            WriteLiteral(@"ductCode;
            arrayLine.quantity = data.quantity;
            arrayLine.concatText = data.concatText;
            arrayLine.concatText2 = data.concatText2;
            arrayLine.expDate = data.expDate;
            arrayLine.batchSN = data.batchSN;
            arrayLine.fda = data.fda;
            arrayLine.UOM = data.UOM;
            sLine.push(arrayLine);
        }
        console.log(sLine);

        print.Data = sLine;
        if (sLine.length > 0) {
            if ($('#labelSize').val() == '0') {
                console.log(""3x"");
                $.ajax({
                    url: '");
#nullable restore
#line 783 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                     Write(Url.Action("PrintItemLablePDFAction", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    type: ""POST"",
                    data: { print: print},
                    dataType: ""JSON"",
                    success: function (data) {
                        if (data == 1) {
                            window.location.href = """);
#nullable restore
#line 789 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                                               Write(Url.Action("PrintItem3LablePDF", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                    }
                    }
                });
            }
        }


    });



    var input01 = document.getElementById(""batchSN"");
    input01.addEventListener(""keyup"", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();

            if ($('#batchSN').val() != '') {
                document.getElementById(""btnSearchItem"").click();
                //document.getElementById(""btnItemCode"").click();
                document.getElementById(""frmLoading"").style.display = ""block"";
                document.getElementById(""batchSN"").disabled = true;
            } else {
                document.getElementById(""frmLoading"").style.display = ""none"";
                document.getElementById(""batchSN"").disabled = false;
            }

        }
    });

    $('#btnSearchItem').click(function () {
        if ($('#batchSN').val() != '') {
            //===================== Check Textbox batchSN Null Or Not! ======================");
            WriteLiteral("=====\r\n            console.log(\"Loading...\");\r\n\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 825 "D:\VB\BarCode-System\BarCodeClientService\Views\CreateLabelSticker\ItemMaster.cshtml"
                 Write(Url.Action("GetItemByBarcode", "CreateLabelSticker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { barCode: $('#batchSN').val(), itemCode: $('#ItemCode').val() },
                type: ""GET"",
                dataType: ""JSON"",
                error: function (request, error) {
                    console.log(arguments);
                    alert("" Can't do because: "" + error);
                    $('#batchSN').val("""").focus();
                    document.getElementById(""frmLoading"").style.display = ""none"";
                },
                success: function (data) {
                    var jqueryXml = $(data);
                    console.log(data);
                    if (jqueryXml[0].data.length != 0) {
                        var bItemCode = jqueryXml[0].data[0].itemCode;
                        var bItemName = jqueryXml[0].data[0].itemName;
                        var bExpDate = jqueryXml[0].data[0].expDate;
                        let isExpDate = bExpDate.substring(0, 10);
                        var bQty = jqueryXml[0].data[0].quantity;
                  ");
            WriteLiteral(@"      //var bQty = jqueryXml[0].data[0].quantity;
                        var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                        var bSerialNumber = jqueryXml[0].data[0].serialNumber
                        if (bBatchNumber != null) {
                            batch = ""Y"";
                        }
                        if (bSerialNumber != null) {
                            serial = ""Y"";
                        }
                        //var cExpDate = new Date().toLocaleDateString();
                        //const str = bExpDate;
                        //const date = new Date(str);
                        //var dateString = date.toLocaleDateString();
                        //const [month, day, year] = dateString.split('/');
                        //var isExpDate = year + ""-"" + month + ""-"" + day;

                        var bFDA = jqueryXml[0].data[0].fda;

                        $('#ItemCode').val(bItemCode);
                        $('#ItemName').val(bIt");
            WriteLiteral(@"emName);
                        $('#expireDate').val(isExpDate); //yyyy-MM-dd
                        $('#txtFDA').val(bFDA);
                        //$('#ProductGroup').val(""-"");
                        $('#Qty').val(""1"");
                        document.getElementById(""frmLoading"").style.display = ""none"";
                        document.getElementById(""batchSN"").disabled = false;
                        console.log('Successed');
                        document.getElementById(""Add"").focus();
                    } else {
                        $('#batchSN').val("""").focus();
                        document.getElementById(""frmLoading"").style.display = ""none"";
                        //$('#ItemCode').val("""");
                        //$('#ItemName').val("""");
                        $('#Qty').val(""1"");
                        //$('#ProductGroup').val("""");
                        $('#batchSN').val("""");
                        //$('#expireDate').val("""");
                        //$('#txtFDA");
            WriteLiteral(@"').val("""");
                        alert(""Item does not exist."");
                        console.log('Item does not exist.');
                        document.getElementById(""batchSN"").disabled = false;
                    }
                }
            });
            //====================================================================================
        }

    });



    //Button for Generate Batch/Serial
    $('#btnAuto').click(function () {
        var date = new Date();
        var year = date.getFullYear().toString().slice(-2);
        var mn = String(date.getMonth() + 1).padStart(2, '0');
        var day =  String(date.getDate()).padStart(2, '0');
        var hr = date.getHours();
        var min = date.getMinutes();
        var ms = date.getSeconds();
        $('#batchSN').val(year + mn + day + hr + min + ms);
    });
");
            WriteLiteral("\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
